1,14c1,143
< ERROR(10): Symbol 'output' is not declared.
< ERROR(13): Symbol 'output' is not declared.
< ERROR(14): Symbol 'outnl' is not declared.
< ERROR(18): Symbol 'output' is not declared.
< ERROR(21): Symbol 'output' is not declared.
< ERROR(22): Symbol 'outnl' is not declared.
< ERROR(26): Symbol 'output' is not declared.
< ERROR(29): Symbol 'output' is not declared.
< ERROR(30): Symbol 'outnl' is not declared.
< ERROR(34): Symbol 'output' is not declared.
< ERROR(37): Symbol 'output' is not declared.
< ERROR(38): Symbol 'outnl' is not declared.
< Number of errors: 12
< Number of warnings: 0
---
> .   .   .   Child: 0  Id: gx [line: 10]
> .   .   .   Child: 0  Id: gx [line: 45]
> .   .   .   Child: 0  Id: gx [line: 8]
> .   .   .   Child: 0  Id: gx [line: 9]
> .   .   .   .   Child: 0  Id: gy [line: 11]
> .   .   .   .   Child: 0  Id: gy [line: 12]
> .   .   .   .   Child: 0  Id: gy [line: 12]
> .   .   .   .   Child: 0  Id: gy [line: 13]
> .   .   .   Child: 0  Id: lx [line: 44]
> .   .   .   Child: 0  Id: lx [line: 46]
> .   .   .   .   .   Child: 0  Id: ly [line: 44]
> .   .   .   Child: 0  Id: px [line: 24]
> .   .   .   Child: 0  Id: px [line: 25]
> .   .   .   Child: 0  Id: px [line: 26]
> .   .   .   .   Child: 0  Id: py [line: 27]
> .   .   .   .   Child: 0  Id: py [line: 28]
> .   .   .   .   Child: 0  Id: py [line: 28]
> .   .   .   .   Child: 0  Id: py [line: 29]
> .   .   .   Child: 0  Id: sx [line: 32]
> .   .   .   Child: 0  Id: sx [line: 33]
> .   .   .   Child: 0  Id: sx [line: 34]
> .   .   .   .   Child: 0  Id: sy [line: 35]
> .   .   .   .   Child: 0  Id: sy [line: 36]
> .   .   .   .   Child: 0  Id: sy [line: 36]
> .   .   .   .   Child: 0  Id: sy [line: 37]
> .   .   .   Child: 0  Id: x [line: 16]
> .   .   .   Child: 0  Id: x [line: 17]
> .   .   .   Child: 0  Id: x [line: 18]
> .   .   .   .   Child: 0  Id: y [line: 19]
> .   .   .   .   Child: 0  Id: y [line: 20]
> .   .   .   .   Child: 0  Id: y [line: 20]
> .   .   .   .   Child: 0  Id: y [line: 21]
> .   .   .   Child: 0  Op: [ [line: 11]
> .   .   .   Child: 0  Op: [ [line: 12]
> .   .   .   Child: 0  Op: [ [line: 13]
> .   .   .   Child: 0  Op: [ [line: 19]
> .   .   .   Child: 0  Op: [ [line: 20]
> .   .   .   Child: 0  Op: [ [line: 21]
> .   .   .   Child: 0  Op: [ [line: 27]
> .   .   .   Child: 0  Op: [ [line: 28]
> .   .   .   Child: 0  Op: [ [line: 29]
> .   .   .   Child: 0  Op: [ [line: 35]
> .   .   .   Child: 0  Op: [ [line: 36]
> .   .   .   Child: 0  Op: [ [line: 37]
> .   .   .   .   Child: 0  Op: [ [line: 44]
> .   Child: 0  Parm: px of type int [line: 3]
> .   .   Child: 0  Var: lx of type int [line: 42]
> .   .   Child: 0  Var: x of type int [line: 5]
> .   .   .   Child: 1  Assign: <= [line: 44]
> .   .   Child: 1  Assign: <= [line: 44]
> .   .   Child: 1  Assign: <= [line: 8]
> .   Child: 1  Compound [line: 4]
> .   Child: 1  Compound [line: 41]
> .   .   .   .   .   Child: 1  Const 0 of type int [line: 44]
> .   .   .   .   Child: 1  Const 111 of type int [line: 44]
> .   .   .   Child: 1  Const 111 of type int [line: 8]
> .   .   .   Child: 1  Const 222 of type int [line: 11]
> .   .   .   Child: 1  Const 333 of type int [line: 16]
> .   .   .   Child: 1  Const 444 of type int [line: 19]
> .   .   .   Child: 1  Const 555 of type int [line: 24]
> .   .   .   Child: 1  Const 666 of type int [line: 27]
> .   .   .   Child: 1  Const 777 of type int [line: 32]
> .   .   .   Child: 1  Const 888 of type int [line: 35]
> .   .   .   .   Child: 1  Const 9 of type int [line: 11]
> .   .   .   .   Child: 1  Const 9 of type int [line: 12]
> .   .   .   .   Child: 1  Const 9 of type int [line: 12]
> .   .   .   .   Child: 1  Const 9 of type int [line: 13]
> .   .   .   .   Child: 1  Const 9 of type int [line: 19]
> .   .   .   .   Child: 1  Const 9 of type int [line: 20]
> .   .   .   .   Child: 1  Const 9 of type int [line: 20]
> .   .   .   .   Child: 1  Const 9 of type int [line: 21]
> .   .   .   .   Child: 1  Const 9 of type int [line: 27]
> .   .   .   .   Child: 1  Const 9 of type int [line: 28]
> .   .   .   .   Child: 1  Const 9 of type int [line: 28]
> .   .   .   .   Child: 1  Const 9 of type int [line: 29]
> .   .   .   .   Child: 1  Const 9 of type int [line: 35]
> .   .   .   .   Child: 1  Const 9 of type int [line: 36]
> .   .   .   .   Child: 1  Const 9 of type int [line: 36]
> .   .   .   .   Child: 1  Const 9 of type int [line: 37]
> .   .   .   Child: 1  Id: gx [line: 9]
> .   .   .   Child: 1  Id: px [line: 25]
> .   .   .   Child: 1  Id: sx [line: 33]
> .   .   .   Child: 1  Id: x [line: 17]
> .   .   .   Child: 1  Op: [ [line: 12]
> .   .   .   Child: 1  Op: [ [line: 20]
> .   .   .   Child: 1  Op: [ [line: 28]
> .   .   .   Child: 1  Op: [ [line: 36]
> Number of errors: 0
> Number of warnings: 14
> .   .   Sibling: 10  Assign: <= [line: 19]
> .   .   Sibling: 11  Assign: <= [line: 20]
> .   .   Sibling: 12  Call: output [line: 21]
> .   .   Sibling: 13  Call: outnl [line: 22]
> .   .   Sibling: 14  Assign: <= [line: 24]
> .   .   Sibling: 15  Assign: <= [line: 25]
> .   .   Sibling: 16  Call: output [line: 26]
> .   .   Sibling: 17  Assign: <= [line: 27]
> .   .   Sibling: 18  Assign: <= [line: 28]
> .   .   Sibling: 19  Call: output [line: 29]
> .   .   Sibling: 1  Assign: <= [line: 9]
> .   .   Sibling: 1  Call: fred [line: 45]
> .   .   .   Sibling: 1  Id: gy [line: 45]
> .   .   .   Sibling: 1  Id: ly [line: 46]
> .   Sibling: 1  Parm: py of array of type int [line: 3]
> Sibling: 1  Var: gy of array of type int [line: 2]
> .   .   Sibling: 1  Var: ly of array of type int [line: 42]
> .   .   Sibling: 1  Var: y of array of type int [line: 5]
> .   .   Sibling: 20  Call: outnl [line: 30]
> .   .   Sibling: 21  Assign: <= [line: 32]
> .   .   Sibling: 22  Assign: <= [line: 33]
> .   .   Sibling: 23  Call: output [line: 34]
> .   .   Sibling: 24  Assign: <= [line: 35]
> .   .   Sibling: 25  Assign: <= [line: 36]
> .   .   Sibling: 26  Call: output [line: 37]
> .   .   Sibling: 27  Call: outnl [line: 38]
> .   .   Sibling: 2  Call: fred [line: 46]
> .   .   Sibling: 2  Call: output [line: 10]
> Sibling: 2  Func: fred returns type void [line: 3]
> .   .   Sibling: 2  Var: sx of static type int [line: 6]
> .   .   Sibling: 3  Assign: <= [line: 11]
> Sibling: 3  Func: main returns type void [line: 41]
> .   .   Sibling: 3  Var: sy of static array of type int [line: 6]
> .   .   Sibling: 4  Assign: <= [line: 12]
> .   .   Sibling: 5  Call: output [line: 13]
> .   .   Sibling: 6  Call: outnl [line: 14]
> .   .   Sibling: 7  Assign: <= [line: 16]
> .   .   Sibling: 8  Assign: <= [line: 17]
> .   .   Sibling: 9  Call: output [line: 18]
> Var: gx of type int [line: 2]
> WARNING(2): The variable 'gx' seems not to be used.
> WARNING(2): The variable 'gx' seems not to be used.
> WARNING(2): The variable 'gy' seems not to be used.
> WARNING(2): The variable 'gy' seems not to be used.
> WARNING(42): The variable 'lx' seems not to be used.
> WARNING(42): The variable 'ly' seems not to be used.
> WARNING(5): The variable 'x' seems not to be used.
> WARNING(5): The variable 'x' seems not to be used.
> WARNING(5): The variable 'y' seems not to be used.
> WARNING(5): The variable 'y' seems not to be used.
> WARNING(6): The variable 'sx' seems not to be used.
> WARNING(6): The variable 'sx' seems not to be used.
> WARNING(6): The variable 'sy' seems not to be used.
> WARNING(6): The variable 'sy' seems not to be used.
