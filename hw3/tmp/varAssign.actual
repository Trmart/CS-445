.   .   .   Child:   Id: gx [line: 14]
.   .   .   Child:   Id: gx [line: 15]
.   .   .   Child:   Id: gx [line: 7]
.   .   .   .   Child:   Id: gy [line: 12]
.   .   .   .   Child:   Id: gy [line: 13]
.   .   .   .   Child:   Id: gy [line: 16]
.   .   .   .   Child:   Id: gy [line: 16]
.   .   .   .   Child:   Id: gy [line: 17]
.   .   .   Child:   Id: px [line: 30]
.   .   .   Child:   Id: px [line: 31]
.   .   .   Child:   Id: px [line: 32]
.   .   .   .   Child:   Id: py [line: 33]
.   .   .   .   Child:   Id: py [line: 33]
.   .   .   .   Child:   Id: py [line: 34]
.   .   .   .   Child:   Id: py [line: 35]
.   .   .   .   Child:   Id: py [line: 36]
.   .   .   .   Child:   Id: py [line: 36]
.   .   .   .   Child:   Id: py [line: 37]
.   .   .   Child:   Id: sx [line: 43]
.   .   .   Child:   Id: sx [line: 44]
.   .   .   Child:   Id: sx [line: 9]
.   .   .   .   Child:   Id: sy [line: 41]
.   .   .   .   Child:   Id: sy [line: 42]
.   .   .   .   Child:   Id: sy [line: 45]
.   .   .   .   Child:   Id: sy [line: 45]
.   .   .   .   Child:   Id: sy [line: 46]
.   .   .   Child:   Id: x [line: 23]
.   .   .   Child:   Id: x [line: 24]
.   .   .   Child:   Id: x [line: 8]
.   .   .   .   Child:   Id: y [line: 21]
.   .   .   .   Child:   Id: y [line: 22]
.   .   .   .   Child:   Id: y [line: 25]
.   .   .   .   Child:   Id: y [line: 25]
.   .   .   .   Child:   Id: y [line: 26]
.   .   .   Child:   Id: zx [line: 56]
.   .   .   Child:   Id: zx [line: 58]
.   .   .   Child:   Id: zx [line: 62]
.   .   .   Child:   Id: zx [line: 65]
.   .   .   .   Child:   Id: zy [line: 57]
.   .   .   .   Child:   Id: zy [line: 59]
.   .   .   .   Child:   Id: zy [line: 66]
.   .   .   Child:   Op: [ [line: 12]
.   .   .   Child:   Op: [ [line: 13]
.   .   .   Child:   Op: [ [line: 16]
.   .   .   Child:   Op: [ [line: 17]
.   .   .   Child:   Op: [ [line: 21]
.   .   .   Child:   Op: [ [line: 22]
.   .   .   Child:   Op: [ [line: 25]
.   .   .   Child:   Op: [ [line: 26]
.   .   .   Child:   Op: [ [line: 33]
.   .   .   Child:   Op: [ [line: 34]
.   .   .   Child:   Op: [ [line: 35]
.   .   .   Child:   Op: [ [line: 36]
.   .   .   Child:   Op: [ [line: 37]
.   .   .   Child:   Op: [ [line: 41]
.   .   .   Child:   Op: [ [line: 42]
.   .   .   Child:   Op: [ [line: 45]
.   .   .   Child:   Op: [ [line: 46]
.   .   .   Child:   Op: [ [line: 57]
.   .   .   Child:   Op: [ [line: 59]
.   .   .   Child:   Op: [ [line: 66]
.   Child:   Parm: px of type int [line: 3]
.   .   Child:   Var: x of type int [line: 5]
.   .   Child:   Var: zx of type int [line: 53]
ERROR(13): Symbol 'output' is not declared.
ERROR(15): Symbol 'output' is not declared.
ERROR(17): Symbol 'output' is not declared.
ERROR(18): Symbol 'outnl' is not declared.
ERROR(22): Symbol 'output' is not declared.
ERROR(24): Symbol 'output' is not declared.
ERROR(26): Symbol 'output' is not declared.
ERROR(27): Symbol 'outnl' is not declared.
ERROR(31): Symbol 'output' is not declared.
ERROR(34): Symbol 'output' is not declared.
ERROR(37): Symbol 'output' is not declared.
ERROR(38): Symbol 'outnl' is not declared.
ERROR(42): Symbol 'output' is not declared.
ERROR(44): Symbol 'output' is not declared.
ERROR(46): Symbol 'output' is not declared.
ERROR(47): Symbol 'outnl' is not declared.
ERROR(51): Symbol '(' is already declared at line 3.
ERROR(58): Symbol 'output' is not declared.
ERROR(59): Symbol 'output' is not declared.
ERROR(60): Symbol 'outnl' is not declared.
ERROR(62): Symbol 'esperanza' is not declared.
ERROR(65): Symbol 'output' is not declared.
ERROR(66): Symbol 'output' is not declared.
ERROR(67): Symbol 'outnl' is not declared.
ERROR(LINKER): A function named 'main()' must be defined.
.   .   hild:   Assign: <= [line: 56]
.   .   hild:   Assign: <= [line: 7]
.   hild:   Compound [line: 4]
.   hild:   Compound [line: 52]
.   .   .   hild:   Const 101 [line: 32]
.   .   .   hild:   Const 102 [line: 35]
.   .   .   hild:   Const 111 [line: 57]
.   .   .   hild:   Const 222 [line: 12]
.   .   .   hild:   Const 333 [line: 21]
.   .   .   hild:   Const 444 [line: 41]
.   .   .   hild:   Const 444 [line: 7]
.   .   .   hild:   Const 555 [line: 8]
.   .   .   hild:   Const 666 [line: 9]
.   .   .   .   hild:   Const 7 [line: 25]
.   .   .   .   hild:   Const 7 [line: 26]
.   .   .   .   hild:   Const 7 [line: 36]
.   .   .   .   hild:   Const 7 [line: 37]
.   .   .   .   hild:   Const 7 [line: 45]
.   .   .   .   hild:   Const 7 [line: 46]
.   .   .   .   hild:   Const 8 [line: 16]
.   .   .   .   hild:   Const 8 [line: 17]
.   .   .   .   hild:   Const 8 [line: 33]
.   .   .   .   hild:   Const 8 [line: 34]
.   .   .   .   hild:   Const 8 [line: 35]
.   .   .   hild:   Const 999 [line: 56]
.   .   .   .   hild:   Const 9 [line: 12]
.   .   .   .   hild:   Const 9 [line: 13]
.   .   .   .   hild:   Const 9 [line: 16]
.   .   .   .   hild:   Const 9 [line: 21]
.   .   .   .   hild:   Const 9 [line: 22]
.   .   .   .   hild:   Const 9 [line: 33]
.   .   .   .   hild:   Const 9 [line: 41]
.   .   .   .   hild:   Const 9 [line: 42]
.   .   .   .   hild:   Const 9 [line: 57]
.   .   .   .   hild:   Const 9 [line: 59]
.   .   .   .   hild:   Const 9 [line: 66]
.   .   .   hild:   Id: gx [line: 14]
.   .   .   hild:   Id: px [line: 30]
.   .   .   hild:   Id: sx [line: 43]
.   .   .   hild:   Id: x [line: 23]
.   .   .   hild:   Op: [ [line: 16]
.   .   .   hild:   Op: [ [line: 33]
.   .   .   hild:   Op: sizeof [line: 25]
.   .   .   hild:   Op: sizeof [line: 36]
.   .   .   hild:   Op: sizeof [line: 45]
Number of errors: 25
Number of warnings: 0
.   .   Sibling: 10  Assign: <= [line: 21]
.   .   Sibling: 11  Call: output [line: 22]
.   .   Sibling: 12  Assign: <= [line: 23]
.   .   Sibling: 13  Call: output [line: 24]
.   .   Sibling: 14  Assign: <= [line: 25]
.   .   Sibling: 15  Call: output [line: 26]
.   .   Sibling: 16  Call: outnl [line: 27]
.   .   Sibling: 17  Assign: <= [line: 30]
.   .   Sibling: 18  Call: output [line: 31]
.   .   Sibling: 19  Assign: <= [line: 32]
.   .   Sibling: 1  Assign: <= [line: 57]
.   .   Sibling: 1  Assign: <= [line: 8]
.   .   .   Sibling: 1  Id: zy [line: 62]
.   Sibling: 1  Parm: py of array of type int [line: 3]
Sibling: 1  Var: gy of array of type int [line: 2]
.   .   Sibling: 1  Var: y of array of type int [line: 5]
.   .   Sibling: 1  Var: zy of array of type int [line: 53]
.   .   Sibling: 20  Assign: <= [line: 33]
.   .   Sibling: 21  Call: output [line: 34]
.   .   Sibling: 22  Assign: <= [line: 35]
.   .   Sibling: 23  Assign: <= [line: 36]
.   .   Sibling: 24  Call: output [line: 37]
.   .   Sibling: 25  Call: outnl [line: 38]
.   .   Sibling: 26  Assign: <= [line: 41]
.   .   Sibling: 27  Call: output [line: 42]
.   .   Sibling: 28  Assign: <= [line: 43]
.   .   Sibling: 29  Call: output [line: 44]
.   .   Sibling: 2  Assign: <= [line: 9]
.   .   Sibling: 2  Call: output [line: 58]
Sibling: 2  Func: ( returns type void [line: 3]
.   .   Sibling: 2  Var: sx of static type int [line: 6]
.   .   Sibling: 30  Assign: <= [line: 45]
.   .   Sibling: 31  Call: output [line: 46]
.   .   Sibling: 32  Call: outnl [line: 47]
.   .   Sibling: 3  Assign: <= [line: 12]
.   .   Sibling: 3  Call: output [line: 59]
Sibling: 3  Func: ( returns type void [line: 51]
.   .   Sibling: 3  Var: sy of static array of type int [line: 6]
.   .   Sibling: 4  Call: outnl [line: 60]
.   .   Sibling: 4  Call: output [line: 13]
.   .   Sibling: 5  Assign: <= [line: 14]
.   .   Sibling: 5  Call: esperanza [line: 62]
.   .   Sibling: 6  Call: output [line: 15]
.   .   Sibling: 6  Call: output [line: 65]
.   .   Sibling: 7  Assign: <= [line: 16]
.   .   Sibling: 7  Call: output [line: 66]
.   .   Sibling: 8  Call: outnl [line: 67]
.   .   Sibling: 8  Call: output [line: 17]
.   .   Sibling: 9  Call: outnl [line: 18]
Var: gx of type int [line: 2]
