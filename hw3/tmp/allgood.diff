1,176c1,91
< .   .   .   Child: 0  Assign: <= of type bool [line: 15]
< .   .   .   Child: 0  Call: ant of type int [line: 82]
< .   .   .   .   Child: 0  Call: ant of type int [line: 85]
< .   .   .   Child: 0  Const 111 of type int [line: 1]
< .   .   .   Child: 0  Const 11 of type int [line: 45]
< .   .   .   .   .   Child: 0  Const 15 of type int [line: 49]
< .   .   .   Child: 0  Const 1818 of type int [line: 20]
< .   .   .   Child: 0  Const 2020 of type int [line: 22]
< .   .   .   .   .   Child: 0  Const 3 of type int [line: 49]
< .   .   .   Child: 0  Const 676 of type int [line: 80]
< .   .   .   .   .   Child: 0  Const 7 of type int [line: 49]
< .   .   .   .   Child: 0  Const 999 of type int [line: 12]
< .   .   .   Child: 0  Const false of type bool [line: 17]
< .   .   .   Child: 0  Const false of type bool [line: 3]
< .   .   .   Child: 0  Const is array "cows" of type char [line: 77]
< .   .   .   Child: 0  Const 'm' of type char [line: 64]
< .   .   .   Child: 0  Id: aa of type int [line: 40]
< .   .   .   .   .   Child: 0  Id: aa of type int [line: 42]
< .   .   .   Child: 0  Id: aa of type int [line: 54]
< .   .   .   Child: 0  Id: aa of type int [line: 57]
< .   .   .   Child: 0  Id: aa of type int [line: 60]
< .   .   .   .   Child: 0  Id: aa of undefined type [line: 47]
< .   .   .   .   Child: 0  Id: a of type int [line: 10]
< .   .   .   .   .   Child: 0  Id: a of type int [line: 11]
< .   .   .   .   Child: 0  Id: a of type int [line: 11]
< .   .   .   Child: 0  Id: a of type int [line: 19]
< .   .   .   Child: 0  Id: a of type int [line: 21]
< .   .   .   Child: 0  Id: a of type int [line: 23]
< .   .   .   Child: 0  Id: a of type int [line: 25]
< .   .   .   Child: 0  Id: a of type int [line: 26]
< .   .   .   Child: 0  Id: a of type int [line: 27]
< .   .   .   Child: 0  Id: a of type int [line: 28]
< .   .   .   Child: 0  Id: a of type int [line: 30]
< .   .   .   Child: 0  Id: a of type int [line: 32]
< .   .   .   Child: 0  Id: a of type int [line: 5]
< .   .   .   .   .   Child: 0  Id: a of type int [line: 50]
< .   .   .   .   Child: 0  Id: a of type int [line: 9]
< .   .   .   .   Child: 0  Id: ba of type bool [line: 41]
< .   .   .   Child: 0  Id: ba of type bool [line: 44]
< .   .   .   Child: 0  Id: ba of type bool [line: 55]
< .   .   .   Child: 0  Id: ba of type bool [line: 58]
< .   .   .   .   Child: 0  Id: ba of undefined type [line: 48]
< .   .   .   Child: 0  Id: bbb of type bool [line: 83]
< .   .   .   .   .   .   Child: 0  Id: b of type bool [line: 13]
< .   .   .   .   .   Child: 0  Id: b of type bool [line: 13]
< .   .   .   Child: 0  Id: b of type bool [line: 13]
< .   .   .   .   .   .   Child: 0  Id: b of type bool [line: 14]
< .   .   .   .   .   Child: 0  Id: b of type bool [line: 14]
< .   .   .   Child: 0  Id: b of type bool [line: 14]
< .   .   .   .   Child: 0  Id: b of type bool [line: 15]
< .   .   .   Child: 0  Id: b of type bool [line: 31]
< .   .   .   .   Child: 0  Id: b of type bool [line: 48]
< .   .   .   Child: 0  Id: b of type bool [line: 6]
< .   .   .   .   Child: 0  Id: ca of type char [line: 42]
< .   .   .   Child: 0  Id: ca of type char [line: 56]
< .   .   .   Child: 0  Id: ca of type char [line: 59]
< .   .   .   Child: 0  Id: ca of type char [line: 62]
< .   .   .   .   .   Child: 0  Id: ccc of type char [line: 83]
< .   .   .   Child: 0  Id: c of type char [line: 7]
< .   .   .   .   Child: 0  Id: i of type int [line: 68]
< .   .   .   .   .   Child: 0  Id: i of type int [line: 70]
< .   .   .   .   Child: 0  Id: z of type int [line: 47]
< .   .   .   .   .   Child: 0  Id: z of type int [line: 51]
< .   .   .   .   .   Child: 0  Op: and of type bool [line: 13]
< .   .   .   .   Child: 0  Op: not of type bool [line: 13]
< .   .   .   .   Child: 0  Op: not of type bool [line: 14]
< .   .   .   Child: 0  Op: < of type bool [line: 10]
< .   .   .   .   Child: 0  Op: !< of type bool [line: 11]
< .   .   .   Child: 0  Op: !> of type bool [line: 11]
< .   .   .   Child: 0  Op: = of type bool [line: 12]
< .   .   .   Child: 0  Op: [ of type bool [line: 41]
< .   .   .   Child: 0  Op: = of type bool [line: 68]
< .   .   .   Child: 0  Op: > of type bool [line: 9]
< .   .   .   Child: 0  Op: [ of type char [line: 42]
< .   .   .   .   Child: 0  Op: [ of type char [line: 83]
< .   .   .   Child: 0  Op: + of type int [line: 85]
< .   .   .   .   Child: 0  Op: + of undefined type [line: 49]
< .   .   .   .   .   Child: 0  Op: or of type bool [line: 14]
< .   Child: 0  Parm: a of type int [line: 2]
< .   Child: 0  Parm: i of type int [line: 67]
< .   .   Child: 0  Var: a of type int [line: 37]
< .   .   Child: 0  Var: bbb of type bool [line: 76]
< .   .   Child: 0  Var: b of type bool [line: 3]
< .   .   .   .   Child: 0  Var: i of type int [line: 69]
< .   .   .   Child: 0  Var: z of type int [line: 47]
< .   .   .   Child: 0  Var: z of type int [line: 48]
< .   .   .   Child: 0  Var: z of type int [line: 49]
< .   .   Child: 1  Assign: <= of type int [line: 5]
< .   .   .   .   Child: 1  Assign: <= of type int [line: 50]
< .   .   .   .   Child: 1  Assign: <= of type int [line: 70]
< .   .   .   Child: 1  Break [line: 17]
< .   .   Child: 1  Call: ant of type int [line: 79]
< .   Child: 1  Compound [line: 1]
< .   Child: 1  Compound [line: 2]
< .   Child: 1  Compound [line: 36]
< .   Child: 1  Compound [line: 67]
< .   .   .   Child: 1  Compound [line: 68]
< .   Child: 1  Compound [line: 75]
< .   .   .   Child: 1  Const 1010 of type int [line: 12]
< .   .   .   .   .   Child: 1  Const 1111 of type int [line: 13]
< .   .   .   .   .   Child: 1  Const 1313 of type int [line: 14]
< .   .   .   Child: 1  Const 1616 of type int [line: 15]
< .   .   .   Child: 1  Const 1717 of type int [line: 19]
< .   .   .   Child: 1  Const 1919 of type int [line: 21]
< .   .   .   Child: 1  Const 1 of type int [line: 25]
< .   .   .   .   .   Child: 1  Const 1 of type int [line: 42]
< .   .   .   Child: 1  Const 2121 of type int [line: 23]
< .   .   .   Child: 1  Const 222 of type int [line: 5]
< .   .   .   .   Child: 1  Const 222 of type int [line: 9]
< .   .   .   Child: 1  Const 2 of type int [line: 26]
< .   .   .   Child: 1  Const 2 of type int [line: 40]
< .   .   .   .   .   Child: 1  Const 2 of type int [line: 83]
< .   .   .   .   Child: 1  Const 333 of type int [line: 10]
< .   .   .   Child: 1  Const 333 of type int [line: 9]
< .   .   .   Child: 1  Const 3 of type int [line: 27]
< .   .   .   .   .   Child: 1  Const 3 of type int [line: 49]
< .   .   .   .   Child: 1  Const 3 of type int [line: 68]
< .   .   .   Child: 1  Const 444 of type int [line: 10]
< .   .   .   Child: 1  Const 4 of type int [line: 28]
< .   .   .   .   .   Child: 1  Const 4 of type int [line: 49]
< .   .   .   .   Child: 1  Const 666 of type int [line: 11]
< .   .   .   .   .   Child: 1  Const 777 of type int [line: 11]
< .   .   .   .   Child: 1  Const 807 of type int [line: 85]
< .   .   .   .   Child: 1  Const 888 of type int [line: 11]
< .   .   .   .   .   Child: 1  Const 8 of type int [line: 49]
< .   .   .   Child: 1  Const is array "dogs are great" of type char [line: 62]
< .   .   .   .   Child: 1  Const 'r' of type char [line: 83]
< .   .   .   .   .   .   Child: 1  Const true of type bool [line: 13]
< .   .   .   .   .   .   Child: 1  Const true of type bool [line: 14]
< .   .   .   .   Child: 1  Const true of type bool [line: 15]
< .   .   .   Child: 1  Const true of type bool [line: 6]
< .   .   .   Child: 1  Const 'z' of type char [line: 7]
< .   .   .   Child: 1  Id: aa of type int [line: 54]
< .   .   .   Child: 1  Id: aa of type int [line: 57]
< .   .   .   Child: 1  Id: aa of type int [line: 60]
< .   .   .   .   Child: 1  Id: aa of undefined type [line: 47]
< .   .   .   .   Child: 1  Id: aa of undefined type [line: 48]
< .   .   .   .   Child: 1  Id: a of type int [line: 12]
< .   .   .   Child: 1  Id: a of type int [line: 20]
< .   .   .   Child: 1  Id: a of type int [line: 22]
< .   .   .   .   Child: 1  Id: a of type int [line: 41]
< .   .   .   .   .   Child: 1  Id: a of type int [line: 51]
< .   .   .   Child: 1  Id: ba of type bool [line: 55]
< .   .   .   Child: 1  Id: ba of type bool [line: 58]
< .   .   .   Child: 1  Id: b of type bool [line: 41]
< .   .   .   .   Child: 1  Id: b of type bool [line: 48]
< .   .   .   Child: 1  Id: ca of type char [line: 56]
< .   .   .   Child: 1  Id: ca of type char [line: 59]
< .   .   .   Child: 1  Id: c of type char [line: 42]
< .   .   .   .   .   Child: 1  Id: i of type int [line: 70]
< .   .   .   .   Child: 1  Id: z of type int [line: 47]
< .   .   .   .   .   Child: 1  Id: z of type int [line: 50]
< .   .   .   Child: 1  If [line: 11]
< .   .   .   Child: 1  If [line: 13]
< .   .   .   Child: 1  If [line: 14]
< .   .   Child: 1  If [line: 68]
< .   .   .   Child: 1  Op: != of type bool [line: 83]
< .   .   Child: 1  Op: [ of type int [line: 40]
< .   .   .   .   Child: 1  Op: [ of type int [line: 42]
< .   .   .   .   Child: 1  Op: * of undefined type [line: 49]
< .   .   .   Child: 1  Range [line: 47]
< .   .   .   Child: 1  Range [line: 48]
< .   .   .   Child: 1  Range [line: 49]
< .   .   Child: 1  Return [line: 1]
< .   .   .   .   Child: 1  While [line: 13]
< .   .   .   .   Child: 1  While [line: 14]
< .   .   .   Child: 2  Compound [line: 49]
< .   .   .   .   Child: 2  Const 1212 of type int [line: 13]
< .   .   .   .   Child: 2  Const 1414 of type int [line: 14]
< .   .   .   Child: 2  Const 1515 of type int [line: 14]
< .   .   .   Child: 2  Const 555 of type int [line: 10]
< .   .   .   .   Child: 2  Const 555 of type int [line: 11]
< .   .   .   .   Child: 2  Id: aa of undefined type [line: 48]
< .   .   .   Child: 2  Op: and of type bool [line: 48]
< .   .   .   Child: 2  Op: + of type int [line: 47]
< .   .   .   .   Child: 2  Op: % of undefined type [line: 49]
---
> .   .   .   Child:   Assign: <= [line: 15]
> .   .   .   Child:   Call: ant [line: 82]
> .   .   .   .   Child:   Call: ant [line: 85]
> .   .   .   Child:   Const 111 [line: 1]
> .   .   .   Child:   Const 11 [line: 45]
> .   .   .   .   .   Child:   Const 15 [line: 49]
> .   .   .   Child:   Const 1818 [line: 20]
> .   .   .   Child:   Const 2020 [line: 22]
> .   .   .   .   .   Child:   Const 3 [line: 49]
> .   .   .   Child:   Const 676 [line: 80]
> .   .   .   .   .   Child:   Const 7 [line: 49]
> .   .   .   .   Child:   Const 999 [line: 12]
> .   .   .   Child:   Const false [line: 17]
> .   .   .   Child:   Const false [line: 3]
> .   .   .   Child:   Const is array "cows" [line: 77]
> .   .   .   Child:   Const 'm' [line: 64]
> .   .   .   Child:   Id: aa [line: 40]
> .   .   .   .   .   Child:   Id: aa [line: 42]
> .   .   .   .   Child:   Id: aa [line: 47]
> .   .   .   Child:   Id: aa [line: 54]
> .   .   .   Child:   Id: aa [line: 57]
> .   .   .   Child:   Id: aa [line: 60]
> .   .   .   .   Child:   Id: a [line: 10]
> .   .   .   .   .   Child:   Id: a [line: 11]
> .   .   .   .   Child:   Id: a [line: 11]
> .   .   .   Child:   Id: a [line: 19]
> .   .   .   Child:   Id: a [line: 21]
> .   .   .   Child:   Id: a [line: 23]
> .   .   .   Child:   Id: a [line: 25]
> .   .   .   Child:   Id: a [line: 26]
> .   .   .   Child:   Id: a [line: 27]
> .   .   .   Child:   Id: a [line: 28]
> .   .   .   Child:   Id: a [line: 30]
> .   .   .   Child:   Id: a [line: 32]
> .   .   .   Child:   Id: a [line: 5]
> .   .   .   .   .   Child:   Id: a [line: 50]
> .   .   .   .   Child:   Id: a [line: 9]
> .   .   .   .   Child:   Id: ba [line: 41]
> .   .   .   Child:   Id: ba [line: 44]
> .   .   .   .   Child:   Id: ba [line: 48]
> .   .   .   Child:   Id: ba [line: 55]
> .   .   .   Child:   Id: ba [line: 58]
> .   .   .   Child:   Id: bbb [line: 83]
> .   .   .   .   .   .   Child:   Id: b [line: 13]
> .   .   .   .   .   Child:   Id: b [line: 13]
> .   .   .   Child:   Id: b [line: 13]
> .   .   .   .   .   .   Child:   Id: b [line: 14]
> .   .   .   .   .   Child:   Id: b [line: 14]
> .   .   .   Child:   Id: b [line: 14]
> .   .   .   .   Child:   Id: b [line: 15]
> .   .   .   Child:   Id: b [line: 31]
> .   .   .   .   Child:   Id: b [line: 48]
> .   .   .   Child:   Id: b [line: 6]
> .   .   .   .   Child:   Id: ca [line: 42]
> .   .   .   Child:   Id: ca [line: 56]
> .   .   .   Child:   Id: ca [line: 59]
> .   .   .   Child:   Id: ca [line: 62]
> .   .   .   .   .   Child:   Id: ccc [line: 83]
> .   .   .   Child:   Id: c [line: 7]
> .   .   .   .   Child:   Id: i [line: 68]
> .   .   .   .   .   Child:   Id: i [line: 70]
> .   .   .   .   Child:   Id: z [line: 47]
> .   .   .   .   .   Child:   Id: z [line: 51]
> .   .   .   .   .   Child:   Op: and [line: 13]
> .   .   .   Child:   Op: < [line: 10]
> .   .   .   .   Child:   Op: !< [line: 11]
> .   .   .   Child:   Op: !> [line: 11]
> .   .   .   Child:   Op: = [line: 12]
> .   .   .   Child:   Op: [ [line: 41]
> .   .   .   Child:   Op: [ [line: 42]
> .   .   .   .   Child:   Op: + [line: 49]
> .   .   .   Child:   Op: = [line: 68]
> .   .   .   .   Child:   Op: [ [line: 83]
> .   .   .   Child:   Op: + [line: 85]
> .   .   .   Child:   Op: > [line: 9]
> .   .   .   .   Child:   Op: not [line: 13]
> .   .   .   .   Child:   Op: not [line: 14]
> .   .   .   .   .   Child:   Op: or [line: 14]
> .   Child:   Parm: a of type int [line: 2]
> .   Child:   Parm: i of type int [line: 67]
> .   .   Child:   Var: a of type int [line: 37]
> .   .   Child:   Var: bbb of static type bool [line: 76]
> .   .   Child:   Var: b of type bool [line: 3]
> .   .   .   .   Child:   Var: i of type int [line: 69]
> .   .   .   Child:   Var: z of type int [line: 47]
> .   .   .   Child:   Var: z of type int [line: 48]
> .   .   .   Child:   Var: z of type int [line: 49]
> ERROR(41): Array index is the unindexed array 'ba'.
> ERROR(67): Symbol '(' is already declared at line 2.
> ERROR(80): Symbol 'bat' is not declared.
> ERROR(82): Symbol 'bat' is not declared.
178c93,182
< Number of errors: 0
---
> .   .   hild:   Assign: <= [line: 5]
> .   .   .   .   hild:   Assign: <= [line: 50]
> .   .   .   .   hild:   Assign: <= [line: 70]
> .   .   .   hild:   Break [line: 17]
> .   .   hild:   Call: ant [line: 79]
> .   hild:   Compound [line: 1]
> .   hild:   Compound [line: 2]
> .   hild:   Compound [line: 36]
> .   hild:   Compound [line: 67]
> .   .   .   hild:   Compound [line: 68]
> .   hild:   Compound [line: 75]
> .   .   .   hild:   Const 1010 [line: 12]
> .   .   .   .   .   hild:   Const 1111 [line: 13]
> .   .   .   .   .   hild:   Const 1313 [line: 14]
> .   .   .   hild:   Const 1616 [line: 15]
> .   .   .   hild:   Const 1717 [line: 19]
> .   .   .   hild:   Const 1919 [line: 21]
> .   .   .   hild:   Const 1 [line: 25]
> .   .   .   .   .   hild:   Const 1 [line: 42]
> .   .   .   hild:   Const 2121 [line: 23]
> .   .   .   hild:   Const 222 [line: 5]
> .   .   .   .   hild:   Const 222 [line: 9]
> .   .   .   hild:   Const 2 [line: 26]
> .   .   .   hild:   Const 2 [line: 40]
> .   .   .   .   .   hild:   Const 2 [line: 83]
> .   .   .   .   hild:   Const 333 [line: 10]
> .   .   .   hild:   Const 333 [line: 9]
> .   .   .   hild:   Const 3 [line: 27]
> .   .   .   .   .   hild:   Const 3 [line: 49]
> .   .   .   .   hild:   Const 3 [line: 68]
> .   .   .   hild:   Const 444 [line: 10]
> .   .   .   hild:   Const 4 [line: 28]
> .   .   .   .   .   hild:   Const 4 [line: 49]
> .   .   .   .   hild:   Const 666 [line: 11]
> .   .   .   .   .   hild:   Const 777 [line: 11]
> .   .   .   .   hild:   Const 807 [line: 85]
> .   .   .   .   hild:   Const 888 [line: 11]
> .   .   .   .   .   hild:   Const 8 [line: 49]
> .   .   .   hild:   Const is array "dogs are great" [line: 62]
> .   .   .   .   hild:   Const 'r' [line: 83]
> .   .   .   .   .   .   hild:   Const true [line: 13]
> .   .   .   .   .   .   hild:   Const true [line: 14]
> .   .   .   .   hild:   Const true [line: 15]
> .   .   .   hild:   Const true [line: 6]
> .   .   .   hild:   Const 'z' [line: 7]
> .   .   .   .   hild:   Id: aa [line: 47]
> .   .   .   .   hild:   Id: aa [line: 48]
> .   .   .   hild:   Id: aa [line: 54]
> .   .   .   hild:   Id: aa [line: 57]
> .   .   .   hild:   Id: aa [line: 60]
> .   .   .   .   hild:   Id: a [line: 12]
> .   .   .   hild:   Id: a [line: 20]
> .   .   .   hild:   Id: a [line: 22]
> .   .   .   .   hild:   Id: a [line: 41]
> .   .   .   .   .   hild:   Id: a [line: 51]
> .   .   .   hild:   Id: ba [line: 55]
> .   .   .   hild:   Id: ba [line: 58]
> .   .   .   hild:   Id: b [line: 41]
> .   .   .   .   hild:   Id: b [line: 48]
> .   .   .   hild:   Id: ca [line: 56]
> .   .   .   hild:   Id: ca [line: 59]
> .   .   .   hild:   Id: c [line: 42]
> .   .   .   .   .   hild:   Id: i [line: 70]
> .   .   .   .   hild:   Id: z [line: 47]
> .   .   .   .   .   hild:   Id: z [line: 50]
> .   .   .   hild:   If [line: 11]
> .   .   .   hild:   If [line: 13]
> .   .   .   hild:   If [line: 14]
> .   .   hild:   If [line: 68]
> .   .   hild:   Op: [ [line: 40]
> .   .   .   .   hild:   Op: [ [line: 42]
> .   .   .   .   hild:   Op: * [line: 49]
> .   .   .   hild:   Op: != [line: 83]
> .   .   .   hild:   Range [line: 47]
> .   .   .   hild:   Range [line: 48]
> .   .   .   hild:   Range [line: 49]
> .   .   hild:   Return [line: 1]
> .   .   .   .   hild:   While [line: 13]
> .   .   .   .   hild:   While [line: 14]
> .   .   .   ild:   Compound [line: 49]
> .   .   .   .   ild:   Const 1212 [line: 13]
> .   .   .   .   ild:   Const 1414 [line: 14]
> .   .   .   ild:   Const 1515 [line: 14]
> .   .   .   ild:   Const 555 [line: 10]
> .   .   .   .   ild:   Const 555 [line: 11]
> .   .   .   .   ild:   Id: aa [line: 48]
> .   .   .   ild:   Op: and [line: 48]
> .   .   .   ild:   Op: + [line: 47]
> .   .   .   .   ild:   Op: % [line: 49]
> Number of errors: 4
180c184
< .   .   Sibling: 10  Op: != of type bool [line: 56]
---
> .   .   Sibling: 10  Op: != [line: 56]
182,192c186,196
< .   .   Sibling: 11  Op: > of type bool [line: 57]
< .   .   Sibling: 11  Op: + of type int [line: 19]
< .   .   Sibling: 12  Op: !< of type bool [line: 58]
< .   .   Sibling: 12  Op: - of type int [line: 20]
< .   .   Sibling: 13  Op: < of type bool [line: 59]
< .   .   Sibling: 13  Op: * of type int [line: 21]
< .   .   Sibling: 14  Op: !> of type bool [line: 60]
< .   .   Sibling: 14  Op: / of type int [line: 22]
< .   .   Sibling: 15  Assign: <= of type char [line: 62]
< .   .   Sibling: 15  Op: % of type int [line: 23]
< .   .   Sibling: 16  Assign: += of type int [line: 25]
---
> .   .   Sibling: 11  Op: + [line: 19]
> .   .   Sibling: 11  Op: > [line: 57]
> .   .   Sibling: 12  Op: - [line: 20]
> .   .   Sibling: 12  Op: !< [line: 58]
> .   .   Sibling: 13  Op: * [line: 21]
> .   .   Sibling: 13  Op: < [line: 59]
> .   .   Sibling: 14  Op: / [line: 22]
> .   .   Sibling: 14  Op: !> [line: 60]
> .   .   Sibling: 15  Assign: <= [line: 62]
> .   .   Sibling: 15  Op: % [line: 23]
> .   .   Sibling: 16  Assign: += [line: 25]
194,203c198,207
< .   .   Sibling: 17  Assign: -= of type int [line: 26]
< .   .   Sibling: 18  Assign: *= of type int [line: 27]
< .   .   Sibling: 19  Assign: /= of type int [line: 28]
< .   .   Sibling: 1  Assign: <= of type bool [line: 41]
< .   .   Sibling: 1  Assign: <= of type bool [line: 6]
< .   .   .   .   Sibling: 1  Assign: <= of type int [line: 51]
< .   .   Sibling: 1  Call: bat of type void [line: 80]
< .   .   .   Sibling: 1  Call: cat of type char [line: 82]
< .   .   .   Sibling: 1  Const 'g' of type char [line: 80]
< Sibling: 1  Func: bat returns type void [line: 2]
---
> .   .   Sibling: 17  Assign: -= [line: 26]
> .   .   Sibling: 18  Assign: *= [line: 27]
> .   .   Sibling: 19  Assign: /= [line: 28]
> .   .   Sibling: 1  Assign: <= [line: 41]
> .   .   .   .   Sibling: 1  Assign: <= [line: 51]
> .   .   Sibling: 1  Assign: <= [line: 6]
> .   .   Sibling: 1  Call: bat [line: 80]
> .   .   .   Sibling: 1  Call: cat [line: 82]
> .   .   .   Sibling: 1  Const 'g' [line: 80]
> Sibling: 1  Func: ( returns type void [line: 2]
206,212c210,216
< .   .   Sibling: 1  Var: ccc is array of type char [line: 77]
< .   .   Sibling: 20  Op: chsign of type int [line: 30]
< .   .   Sibling: 21  Op: not of type bool [line: 31]
< .   .   Sibling: 22  Op: ? of type int [line: 32]
< .   .   Sibling: 2  Assign: <= of type char [line: 42]
< .   .   Sibling: 2  Assign: <= of type char [line: 7]
< .   .   Sibling: 2  Call: cat of type char [line: 81]
---
> .   .   Sibling: 1  Var: ccc of static array of type char [line: 77]
> .   .   Sibling: 20  Op: chsign [line: 30]
> .   .   Sibling: 21  Op: not [line: 31]
> .   .   Sibling: 22  Op: ? [line: 32]
> .   .   Sibling: 2  Assign: <= [line: 42]
> .   .   Sibling: 2  Assign: <= [line: 7]
> .   .   Sibling: 2  Call: cat [line: 81]
215,216c219,220
< .   .   Sibling: 3  Call: bat of type void [line: 82]
< Sibling: 3  Func: dog returns type void [line: 67]
---
> .   .   Sibling: 3  Call: bat [line: 82]
> Sibling: 3  Func: ( returns type void [line: 67]
218,220c222,224
< .   .   Sibling: 3  Op: sizeof of type int [line: 44]
< .   .   Sibling: 3  Var: aa is array of type int [line: 38]
< .   .   Sibling: 4  Assign: <= of type bool [line: 83]
---
> .   .   Sibling: 3  Op: sizeof [line: 44]
> .   .   Sibling: 3  Var: aa of array of type int [line: 38]
> .   .   Sibling: 4  Assign: <= [line: 83]
223,224c227,228
< .   .   Sibling: 4  Op: ? of type int [line: 45]
< .   .   Sibling: 4  Var: ba is array of type bool [line: 38]
---
> .   .   Sibling: 4  Op: ? [line: 45]
> .   .   Sibling: 4  Var: ba of array of type bool [line: 38]
228c232
< .   .   Sibling: 5  Var: ca is array of type char [line: 38]
---
> .   .   Sibling: 5  Var: ca of array of type char [line: 38]
233c237
< .   .   Sibling: 8  Assign: <= of type int [line: 54]
---
> .   .   Sibling: 8  Assign: <= [line: 54]
236c240
< .   .   Sibling: 9  Op: = of type bool [line: 55]
---
> .   .   Sibling: 9  Op: = [line: 55]
