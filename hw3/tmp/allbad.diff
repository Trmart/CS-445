1,4c1,194
< ERROR(102): '<=' requires operands of the same type but lhs is type char and rhs is type bool.
< ERROR(105): '+' requires operands of type int but lhs is of type void.
< ERROR(105): '+' requires operands of type int but rhs is of type bool.
< ERROR(107): '+' requires operands of type int but lhs is of type char.
---
> .   .   .   Child: 0  Assign: <= [line: 17]
> .   .   .   Child: 0  Call: ant [line: 103]
> .   .   .   .   Child: 0  Call: ant [line: 107]
> .   .   .   Child: 0  Call: dog [line: 105]
> .   .   .   .   Child: 0  Const 0 of type int [line: 53]
> .   .   .   Child: 0  Const 111 of type int [line: 2]
> .   .   .   Child: 0  Const 1818 of type int [line: 22]
> .   .   .   .   Child: 0  Const 1 of type int [line: 51]
> .   .   .   Child: 0  Const 2020 of type int [line: 24]
> .   .   .   .   Child: 0  Const 3 of type int [line: 52]
> .   .   .   Child: 0  Const 676 of type int [line: 101]
> .   .   .   .   Child: 0  Const 999 of type int [line: 14]
> .   .   .   Child: 0  Const false of type bool [line: 19]
> .   .   .   Child: 0  Id: aa of type undefined [line: 42]
> .   .   .   .   .   Child: 0  Id: aa of type undefined [line: 44]
> .   .   .   Child: 0  Id: aa of type undefined [line: 45]
> .   .   .   Child: 0  Id: aa of type undefined [line: 57]
> .   .   .   Child: 0  Id: aa of type undefined [line: 60]
> .   .   .   Child: 0  Id: aa of type undefined [line: 63]
> .   .   .   Child: 0  Id: aa of type undefined [line: 67]
> .   .   .   .   Child: 0  Id: a of type undefined [line: 11]
> .   .   .   .   Child: 0  Id: a of type undefined [line: 12]
> .   .   .   .   .   Child: 0  Id: a of type undefined [line: 13]
> .   .   .   .   Child: 0  Id: a of type undefined [line: 13]
> .   .   .   Child: 0  Id: a of type undefined [line: 21]
> .   .   .   Child: 0  Id: a of type undefined [line: 23]
> .   .   .   Child: 0  Id: a of type undefined [line: 25]
> .   .   .   Child: 0  Id: a of type undefined [line: 27]
> .   .   .   Child: 0  Id: a of type undefined [line: 28]
> .   .   .   Child: 0  Id: a of type undefined [line: 29]
> .   .   .   Child: 0  Id: a of type undefined [line: 30]
> .   .   .   Child: 0  Id: a of type undefined [line: 32]
> .   .   .   Child: 0  Id: a of type undefined [line: 34]
> .   .   .   .   .   Child: 0  Id: a of type undefined [line: 54]
> .   .   .   Child: 0  Id: a of type undefined [line: 7]
> .   .   .   .   Child: 0  Id: ba of type undefined [line: 43]
> .   .   .   Child: 0  Id: ba of type undefined [line: 49]
> .   .   .   Child: 0  Id: ba of type undefined [line: 58]
> .   .   .   Child: 0  Id: ba of type undefined [line: 61]
> .   .   .   Child: 0  Id: bbb of type undefined [line: 104]
> .   .   .   Child: 0  Id: bbb of type undefined [line: 98]
> .   .   .   Child: 0  Id: bbb of type undefined [line: 99]
> .   .   .   .   .   .   Child: 0  Id: b of type undefined [line: 15]
> .   .   .   .   .   Child: 0  Id: b of type undefined [line: 15]
> .   .   .   Child: 0  Id: b of type undefined [line: 15]
> .   .   .   .   .   .   Child: 0  Id: b of type undefined [line: 16]
> .   .   .   .   .   Child: 0  Id: b of type undefined [line: 16]
> .   .   .   Child: 0  Id: b of type undefined [line: 16]
> .   .   .   .   Child: 0  Id: b of type undefined [line: 17]
> .   .   .   Child: 0  Id: b of type undefined [line: 33]
> .   .   .   Child: 0  Id: b of type undefined [line: 8]
> .   .   .   Child: 0  Id: b of type undefined [line: 82]
> .   .   .   .   Child: 0  Id: b of type undefined [line: 87]
> .   .   .   .   Child: 0  Id: ca of type undefined [line: 44]
> .   .   .   Child: 0  Id: ca of type undefined [line: 59]
> .   .   .   Child: 0  Id: ca of type undefined [line: 62]
> .   .   .   Child: 0  Id: ca of type undefined [line: 65]
> .   .   .   Child: 0  Id: cat of type undefined [line: 46]
> .   .   .   Child: 0  Id: cat of type undefined [line: 47]
> .   .   .   .   Child: 0  Id: ccc of type undefined [line: 102]
> .   .   .   .   .   Child: 0  Id: ccc of type undefined [line: 104]
> .   .   .   Child: 0  Id: ccc of type undefined [line: 96]
> .   .   .   Child: 0  Id: ccc of type undefined [line: 97]
> .   .   .   .   Child: 0  Id: c of type undefined [line: 85]
> .   .   .   .   Child: 0  Id: c of type undefined [line: 86]
> .   .   .   Child: 0  Id: c of type undefined [line: 9]
> .   .   .   .   Child: 0  Id: i of type undefined [line: 71]
> .   .   .   .   .   Child: 0  Id: i of type undefined [line: 73]
> .   .   .   .   Child: 0  Id: z of type undefined [line: 51]
> .   .   .   .   Child: 0  Id: z of type undefined [line: 52]
> .   .   .   .   .   Child: 0  Op: and of type bool [line: 15]
> .   .   .   .   Child: 0  Op: not of type bool [line: 15]
> .   .   .   .   Child: 0  Op: not of type bool [line: 16]
> .   .   .   Child: 0  Op: > of type bool [line: 11]
> .   .   .   Child: 0  Op: < of type bool [line: 12]
> .   .   .   .   Child: 0  Op: !< of type bool [line: 13]
> .   .   .   Child: 0  Op: !> of type bool [line: 13]
> .   .   .   Child: 0  Op: = of type bool [line: 14]
> .   .   .   Child: 0  Op: = of type bool [line: 71]
> .   .   .   Child: 0  Op: + of type int [line: 107]
> .   .   .   Child: 0  Op: [ of type undefined [line: 102]
> .   .   .   .   Child: 0  Op: [ of type undefined [line: 104]
> .   .   .   Child: 0  Op: [ of type undefined [line: 43]
> .   .   .   Child: 0  Op: [ of type undefined [line: 44]
> .   .   .   .   .   Child: 0  Op: or of type bool [line: 16]
> .   Child: 0  Parm: a of type bool [line: 4]
> .   Child: 0  Parm: a of type int [line: 79]
> .   Child: 0  Parm: i of type int [line: 70]
> .   .   Child: 0  Var: a of type char [line: 39]
> .   .   Child: 0  Var: a of type int [line: 81]
> .   .   .   Child: 0  Var: a of type int [line: 84]
> .   .   Child: 0  Var: bbb of static type bool [line: 93]
> .   .   Child: 0  Var: b of type int [line: 5]
> .   .   .   .   Child: 0  Var: i of type int [line: 72]
> .   .   .   Child: 0  Var: z of type int [line: 51]
> .   .   .   Child: 0  Var: z of type int [line: 52]
> .   .   .   Child: 0  Var: z of type int [line: 53]
> .   .   .   .   Child: 1  Assign: <= [line: 54]
> .   .   Child: 1  Assign: <= [line: 7]
> .   .   .   .   Child: 1  Assign: <= [line: 73]
> .   .   Child: 1  Assign: <= [line: 82]
> .   .   .   Child: 1  Assign: <= [line: 85]
> .   .   .   Child: 1  Break [line: 19]
> .   .   .   Child: 1  Call: cat [line: 102]
> .   .   .   Child: 1  Call: cat [line: 105]
> .   Child: 1  Compound [line: 2]
> .   Child: 1  Compound [line: 38]
> .   Child: 1  Compound [line: 4]
> .   Child: 1  Compound [line: 70]
> .   .   .   Child: 1  Compound [line: 71]
> .   Child: 1  Compound [line: 80]
> .   Child: 1  Compound [line: 92]
> .   .   .   Child: 1  Const 1010 of type int [line: 14]
> .   .   .   .   Child: 1  Const 10 of type int [line: 51]
> .   .   .   .   Child: 1  Const 10 of type int [line: 53]
> .   .   .   .   .   Child: 1  Const 1111 of type int [line: 15]
> .   .   .   .   .   Child: 1  Const 1313 of type int [line: 16]
> .   .   .   Child: 1  Const 1616 of type int [line: 17]
> .   .   .   Child: 1  Const 1717 of type int [line: 21]
> .   .   .   Child: 1  Const 1919 of type int [line: 23]
> .   .   .   Child: 1  Const 1 of type int [line: 27]
> .   .   .   .   .   Child: 1  Const 1 of type int [line: 44]
> .   .   .   .   Child: 1  Const 201 of type int [line: 52]
> .   .   .   Child: 1  Const 2121 of type int [line: 25]
> .   .   .   .   Child: 1  Const 222 of type int [line: 11]
> .   .   .   Child: 1  Const 222 of type int [line: 7]
> .   .   .   .   .   Child: 1  Const 2 of type int [line: 104]
> .   .   .   Child: 1  Const 2 of type int [line: 28]
> .   .   .   Child: 1  Const 2 of type int [line: 42]
> .   .   .   Child: 1  Const 333 of type int [line: 11]
> .   .   .   .   Child: 1  Const 333 of type int [line: 12]
> .   .   .   .   Child: 1  Const 3 of type int [line: 102]
> .   .   .   Child: 1  Const 3 of type int [line: 29]
> .   .   .   Child: 1  Const 3 of type int [line: 46]
> .   .   .   .   Child: 1  Const 3 of type int [line: 71]
> .   .   .   Child: 1  Const 444 of type int [line: 12]
> .   .   .   Child: 1  Const 4 of type int [line: 30]
> .   .   .   .   Child: 1  Const 666 of type int [line: 13]
> .   .   .   .   .   Child: 1  Const 777 of type int [line: 13]
> .   .   .   .   Child: 1  Const 807 of type int [line: 107]
> .   .   .   .   Child: 1  Const 888 of type int [line: 13]
> .   .   .   Child: 1  Const is array "dogs are great" [line: 65]
> .   .   .   .   Child: 1  Const 'r' of type char [line: 104]
> .   .   .   .   .   .   Child: 1  Const true of type bool [line: 15]
> .   .   .   .   .   .   Child: 1  Const true of type bool [line: 16]
> .   .   .   .   Child: 1  Const true of type bool [line: 17]
> .   .   .   Child: 1  Const true of type bool [line: 8]
> .   .   .   Child: 1  Const 'z' of type char [line: 9]
> .   .   .   Child: 1  Id: aa of type undefined [line: 45]
> .   .   .   Child: 1  Id: aa of type undefined [line: 57]
> .   .   .   Child: 1  Id: aa of type undefined [line: 60]
> .   .   .   Child: 1  Id: aa of type undefined [line: 63]
> .   .   .   .   Child: 1  Id: a of type undefined [line: 14]
> .   .   .   Child: 1  Id: a of type undefined [line: 22]
> .   .   .   Child: 1  Id: a of type undefined [line: 24]
> .   .   .   .   Child: 1  Id: a of type undefined [line: 43]
> .   .   .   Child: 1  Id: a of type undefined [line: 82]
> .   .   .   Child: 1  Id: ba of type undefined [line: 58]
> .   .   .   Child: 1  Id: ba of type undefined [line: 61]
> .   .   .   Child: 1  Id: b of type undefined [line: 43]
> .   .   .   .   Child: 1  Id: b of type undefined [line: 86]
> .   .   .   .   Child: 1  Id: b of type undefined [line: 87]
> .   .   .   Child: 1  Id: ca of type undefined [line: 59]
> .   .   .   Child: 1  Id: ca of type undefined [line: 62]
> .   .   .   Child: 1  Id: ccc of type undefined [line: 97]
> .   .   .   Child: 1  Id: c of type undefined [line: 44]
> .   .   .   .   Child: 1  Id: c of type undefined [line: 85]
> .   .   .   .   .   Child: 1  Id: i of type undefined [line: 73]
> .   .   .   .   Child: 1  Id: z of type undefined [line: 51]
> .   .   .   .   Child: 1  Id: z of type undefined [line: 52]
> .   .   .   .   .   Child: 1  Id: z of type undefined [line: 54]
> .   .   .   Child: 1  If [line: 13]
> .   .   .   Child: 1  If [line: 15]
> .   .   .   Child: 1  If [line: 16]
> .   .   Child: 1  If [line: 71]
> .   .   .   Child: 1  Op: != of type bool [line: 104]
> .   .   Child: 1  Op: ? of type int [line: 96]
> .   .   Child: 1  Op: [ of type undefined [line: 42]
> .   .   .   .   Child: 1  Op: [ of type undefined [line: 44]
> .   .   .   Child: 1  Range [line: 51]
> .   .   .   Child: 1  Range [line: 52]
> .   .   .   Child: 1  Range [line: 53]
> .   .   Child: 1  Return [line: 2]
> .   .   .   .   Child: 1  While [line: 15]
> .   .   .   .   Child: 1  While [line: 16]
> .   .   .   Child: 2  Assign: <= [line: 52]
> .   .   .   Child: 2  Compound [line: 53]
> .   .   .   .   Child: 2  Const 11 of type int [line: 52]
> .   .   .   .   Child: 2  Const 1212 of type int [line: 15]
> .   .   .   .   Child: 2  Const 1414 of type int [line: 16]
> .   .   .   Child: 2  Const 1515 of type int [line: 16]
> .   .   .   Child: 2  Const 555 of type int [line: 12]
> .   .   .   .   Child: 2  Const 555 of type int [line: 13]
> .   .   .   Child: 2  Op: + of type int [line: 51]
6,34c196,199
< ERROR(11): '>' requires operands of the same type but lhs is type bool and rhs is type int.
< ERROR(12): '<' requires operands of the same type but lhs is type bool and rhs is type int.
< ERROR(13): '!<' requires operands of the same type but lhs is type bool and rhs is type int.
< ERROR(13): '!>' requires operands of the same type but lhs is type bool and rhs is type int.
< ERROR(14): '=' requires operands of the same type but lhs is type int and rhs is type bool.
< ERROR(15): 'and' requires operands of type bool but lhs is of type int.
< ERROR(15): Unary 'not' requires an operand of type bool but was given type int.
< ERROR(16): 'or' requires operands of type bool but lhs is of type int.
< ERROR(16): Unary 'not' requires an operand of type bool but was given type int.
< ERROR(17): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
< ERROR(21): '+' requires operands of type int but lhs is of type bool.
< ERROR(22): '-' requires operands of type int but rhs is of type bool.
< ERROR(23): '*' requires operands of type int but lhs is of type bool.
< ERROR(24): '/' requires operands of type int but rhs is of type bool.
< ERROR(25): '%' requires operands of type int but lhs is of type bool.
< ERROR(27): '+=' requires operands of type int but lhs is of type bool.
< ERROR(28): '-=' requires operands of type int but lhs is of type bool.
< ERROR(29): '*=' requires operands of type int but lhs is of type bool.
< ERROR(30): '/=' requires operands of type int but lhs is of type bool.
< ERROR(32): Unary 'chsign' requires an operand of type int but was given type bool.
< ERROR(33): Unary 'not' requires an operand of type bool but was given type int.
< ERROR(34): Unary '?' requires an operand of type int but was given type bool.
< ERROR(43): Array 'ba' should be indexed by type int but got type char.
< ERROR(43): '<=' requires operands of the same type but lhs is type char and rhs is type int.
< ERROR(44): Array 'ca' should be indexed by type int but got type bool.
< ERROR(44): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
< ERROR(45): Array 'aa' should be indexed by type int but got type bool.
< ERROR(45): Array index is the unindexed array 'aa'.
< ERROR(46): Cannot index nonarray 'cat'.
---
> ERROR(27): Symbol 'a' is not declared.
> ERROR(28): Symbol 'a' is not declared.
> ERROR(29): Symbol 'a' is not declared.
> ERROR(30): Symbol 'a' is not declared.
37,39d201
< ERROR(54): '<=' requires operands of the same type but lhs is type char and rhs is type int.
< ERROR(65): '<=' requires operands of the same type but lhs is type int and rhs is type char.
< ERROR(67): Cannot return an array.
41c203
< ERROR(7): '<=' requires operands of the same type but lhs is type bool and rhs is type int.
---
> ERROR(7): Symbol 'a' is not declared.
43a206,207
> ERROR(82): Symbol 'b' is not declared.
> ERROR(85): Symbol 'c' is not declared.
47,55c211,212
< ERROR(8): '<=' requires operands of the same type but lhs is type int and rhs is type bool.
< ERROR(96): The operation '?' does not work with arrays.
< ERROR(96): Unary '?' requires an operand of type int but was given type char.
< ERROR(97): '/' requires operands of type int but lhs is of type char.
< ERROR(97): '/' requires operands of type int but rhs is of type char.
< ERROR(97): The operation '/' does not work with arrays.
< ERROR(98): The operation 'sizeof' only works with arrays.
< ERROR(99): 'bbb' is a simple variable and cannot be called.
< ERROR(9): '<=' requires operands of the same type but lhs is type int and rhs is type char.
---
> ERROR(86): Symbol 'c' is not declared.
> ERROR(9): Symbol 'c' is not declared.
57,62c214,298
< Number of errors: 56
< Number of warnings: 6
< WARNING(42): Variable 'aa' may be uninitialized when used here.
< WARNING(43): Variable 'b' may be uninitialized when used here.
< WARNING(44): Variable 'c' may be uninitialized when used here.
< WARNING(73): Variable 'i' may be uninitialized when used here.
---
> Func: ant returns type char [line: 2]
> Number of errors: 19
> Number of warnings: 15
> .   .   Sibling: 10  Assign: <= [line: 57]
> .   .   Sibling: 10  Return [line: 107]
> .   .   Sibling: 10  While [line: 19]
> .   .   Sibling: 11  Op: = of type bool [line: 58]
> .   .   Sibling: 11  Op: + of type int [line: 21]
> .   .   Sibling: 12  Op: != of type bool [line: 59]
> .   .   Sibling: 12  Op: - of type int [line: 22]
> .   .   Sibling: 13  Op: > of type bool [line: 60]
> .   .   Sibling: 13  Op: * of type int [line: 23]
> .   .   Sibling: 14  Op: !< of type bool [line: 61]
> .   .   Sibling: 14  Op: / of type int [line: 24]
> .   .   Sibling: 15  Op: < of type bool [line: 62]
> .   .   Sibling: 15  Op: % of type int [line: 25]
> .   .   Sibling: 16  Assign: += [line: 27]
> .   .   Sibling: 16  Op: !> of type bool [line: 63]
> .   .   Sibling: 17  Assign: -= [line: 28]
> .   .   Sibling: 17  Assign: <= [line: 65]
> .   .   Sibling: 18  Assign: *= [line: 29]
> .   .   Sibling: 18  Return [line: 67]
> .   .   Sibling: 19  Assign: /= [line: 30]
> .   .   Sibling: 1  Assign: <= [line: 43]
> .   .   Sibling: 1  Assign: <= [line: 8]
> .   .   .   Sibling: 1  Assign: <= [line: 86]
> .   .   .   Sibling: 1  Call: cat [line: 103]
> .   .   Sibling: 1  Compound [line: 83]
> .   .   .   Sibling: 1  Const 'g' of type char [line: 101]
> Sibling: 1  Func: bat returns type void [line: 4]
> .   .   Sibling: 1  Op: / of type int [line: 97]
> .   Sibling: 1  Parm: a of type int [line: 79]
> .   Sibling: 1  Parm: c of type int [line: 4]
> .   .   .   .   Sibling: 1  Return [line: 74]
> .   .   Sibling: 1  Var: b of type int [line: 39]
> .   .   .   Sibling: 1  Var: b of type int [line: 84]
> .   .   Sibling: 1  Var: ccc of static array of type char [line: 94]
> .   .   Sibling: 20  Op: chsign of type int [line: 32]
> .   .   Sibling: 21  Op: not of type bool [line: 33]
> .   .   Sibling: 22  Op: ? of type int [line: 34]
> .   .   Sibling: 2  Assign: <= [line: 44]
> .   .   .   Sibling: 2  Assign: <= [line: 87]
> .   .   Sibling: 2  Assign: <= [line: 9]
> Sibling: 2  Func: cat returns type bool [line: 37]
> .   .   Sibling: 2  Op: sizeof of type int [line: 98]
> .   .   Sibling: 2  Var: c of type bool [line: 39]
> .   .   Sibling: 3  Call: bbb [line: 99]
> Sibling: 3  Func: dog returns type void [line: 70]
> .   .   Sibling: 3  If [line: 11]
> .   .   Sibling: 3  Op: [ of type undefined [line: 45]
> .   .   Sibling: 3  Var: aa of array of type bool [line: 40]
> .   .   Sibling: 4  Call: ant [line: 100]
> Sibling: 4  Func: elk returns type void [line: 79]
> .   .   Sibling: 4  If [line: 12]
> .   .   Sibling: 4  Op: [ of type undefined [line: 46]
> .   .   Sibling: 4  Var: ba of array of type char [line: 40]
> .   .   Sibling: 5  Call: bat [line: 101]
> .   .   Sibling: 5  Call: cat [line: 47]
> Sibling: 5  Func: mane returns type int [line: 91]
> .   .   Sibling: 5  If [line: 13]
> .   .   Sibling: 5  Var: ca of array of type int [line: 40]
> .   .   Sibling: 6  Assign: <= [line: 102]
> .   .   Sibling: 6  Op: sizeof of type int [line: 49]
> Sibling: 6  Var: mane of type int [line: 110]
> .   .   Sibling: 6  While [line: 14]
> .   .   Sibling: 7  Call: bat [line: 103]
> .   .   Sibling: 7  For [line: 51]
> .   .   Sibling: 7  If [line: 15]
> .   .   Sibling: 8  Assign: <= [line: 104]
> .   .   Sibling: 8  For [line: 52]
> .   .   Sibling: 8  If [line: 16]
> .   .   Sibling: 9  For [line: 53]
> .   .   Sibling: 9  If [line: 17]
> .   .   Sibling: 9  Op: + of type int [line: 105]
> WARNING(39): The variable 'a' seems not to be used.
> WARNING(39): The variable 'b' seems not to be used.
> WARNING(39): The variable 'c' seems not to be used.
> WARNING(40): The variable 'aa' seems not to be used.
> WARNING(40): The variable 'ba' seems not to be used.
> WARNING(40): The variable 'ca' seems not to be used.
> WARNING(51): The variable 'z' seems not to be used.
> WARNING(52): The variable 'z' seems not to be used.
> WARNING(53): The variable 'z' seems not to be used.
> WARNING(5): The variable 'b' seems not to be used.
> WARNING(72): The variable 'i' seems not to be used.
64c300,302
< WARNING(86): Variable 'b' may be uninitialized when used here.
---
> WARNING(84): The variable 'b' seems not to be used.
> WARNING(93): The variable 'bbb' seems not to be used.
> WARNING(94): The variable 'ccc' seems not to be used.
