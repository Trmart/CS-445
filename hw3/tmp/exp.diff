1,27c1,242
< ERROR(10): Symbol 'output' is not declared.
< ERROR(11): Symbol 'outnl' is not declared.
< ERROR(12): Symbol 'output' is not declared.
< ERROR(13): Symbol 'output' is not declared.
< ERROR(14): Symbol 'outnl' is not declared.
< ERROR(15): Symbol 'output' is not declared.
< ERROR(16): Symbol 'output' is not declared.
< ERROR(17): Symbol 'outnl' is not declared.
< ERROR(18): Symbol 'output' is not declared.
< ERROR(19): Symbol 'output' is not declared.
< ERROR(20): Symbol 'output' is not declared.
< ERROR(21): Symbol 'outnl' is not declared.
< ERROR(22): Symbol 'outputb' is not declared.
< ERROR(23): Symbol 'outputb' is not declared.
< ERROR(24): Symbol 'outnl' is not declared.
< ERROR(25): Symbol 'outputb' is not declared.
< ERROR(26): Symbol 'outputb' is not declared.
< ERROR(27): Symbol 'outnl' is not declared.
< ERROR(28): Symbol 'outputb' is not declared.
< ERROR(29): Symbol 'outputb' is not declared.
< ERROR(30): Symbol 'outnl' is not declared.
< ERROR(31): Symbol 'outputb' is not declared.
< ERROR(32): Symbol 'outnl' is not declared.
< ERROR(8): Symbol 'output' is not declared.
< ERROR(9): Symbol 'output' is not declared.
< Number of errors: 25
< Number of warnings: 0
---
> .   .   .   Child: 0  Assign: <= [line: 31]
> .   .   .   .   .   Child: 0  Call: ident [line: 12]
> .   .   .   .   .   Child: 0  Call: ident [line: 13]
> .   .   .   .   .   Child: 0  Call: ident [line: 15]
> .   .   .   .   .   .   Child: 0  Call: ident [line: 16]
> .   .   .   .   .   .   .   Child: 0  Call: ident [line: 18]
> .   .   .   .   .   .   .   .   Child: 0  Call: ident [line: 19]
> .   .   .   .   .   .   .   .   .   Child: 0  Call: ident [line: 20]
> .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: ident [line: 22]
> .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: ident [line: 23]
> .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: ident [line: 25]
> .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: ident [line: 26]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: ident [line: 28]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: ident [line: 29]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Call: ident [line: 31]
> .   .   .   Child: 0  Call: ident [line: 8]
> .   .   .   .   Child: 0  Call: ident [line: 9]
> .   .   .   .   .   Child: 0  Const 111 of type int [line: 10]
> .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 12]
> .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 13]
> .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 15]
> .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 16]
> .   .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 18]
> .   .   .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 19]
> .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 20]
> .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 22]
> .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 23]
> .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 25]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 26]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 28]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Const 111 of type int [line: 31]
> .   .   .   .   Child: 0  Const 111 of type int [line: 8]
> .   .   .   .   .   Child: 0  Const 111 of type int [line: 9]
> .   .   .   .   Child: 0  Const 222 of type int [line: 10]
> .   .   .   .   .   Child: 0  Const 777 of type int [line: 28]
> .   .   .   .   .   .   Child: 0  Const 777 of type int [line: 29]
> .   .   .   .   .   .   .   Child: 0  Const 777 of type int [line: 31]
> .   .   .   .   .   Child: 0  Const 999 of type int [line: 29]
> .   .   .   .   .   .   Child: 0  Const 999 of type int [line: 31]
> .   .   .   Child: 0  Id: x of type undefined [line: 2]
> .   .   .   .   Child: 0  Id: x of type undefined [line: 31]
> .   .   .   Child: 0  Op: and of type bool [line: 28]
> .   .   .   .   Child: 0  Op: and of type bool [line: 29]
> .   .   .   .   .   Child: 0  Op: and of type bool [line: 31]
> .   .   .   Child: 0  Op: chsign of type int [line: 15]
> .   .   .   .   Child: 0  Op: chsign of type int [line: 16]
> .   .   .   Child: 0  Op: chsign of type int [line: 16]
> .   .   .   .   .   Child: 0  Op: chsign of type int [line: 18]
> .   .   .   .   Child: 0  Op: chsign of type int [line: 18]
> .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 19]
> .   .   .   .   .   Child: 0  Op: chsign of type int [line: 19]
> .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 20]
> .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 20]
> .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 22]
> .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 22]
> .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 23]
> .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 23]
> .   .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 25]
> .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 25]
> .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 26]
> .   .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 26]
> .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 28]
> .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 28]
> .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 31]
> .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: chsign of type int [line: 31]
> .   .   .   Child: 0  Op: not of type bool [line: 25]
> .   .   .   .   Child: 0  Op: not of type bool [line: 26]
> .   .   .   Child: 0  Op: not of type bool [line: 26]
> .   .   .   .   .   Child: 0  Op: not of type bool [line: 28]
> .   .   .   .   Child: 0  Op: not of type bool [line: 28]
> .   .   .   .   .   .   Child: 0  Op: not of type bool [line: 29]
> .   .   .   .   .   Child: 0  Op: not of type bool [line: 29]
> .   .   .   .   .   .   .   Child: 0  Op: not of type bool [line: 31]
> .   .   .   .   .   .   Child: 0  Op: not of type bool [line: 31]
> .   .   .   Child: 0  Op: !> of type bool [line: 22]
> .   .   .   Child: 0  Op: !< of type bool [line: 23]
> .   .   .   .   Child: 0  Op: !> of type bool [line: 25]
> .   .   .   .   .   Child: 0  Op: !> of type bool [line: 26]
> .   .   .   .   .   .   Child: 0  Op: !> of type bool [line: 28]
> .   .   .   .   .   .   .   Child: 0  Op: !> of type bool [line: 29]
> .   .   .   .   .   .   .   .   Child: 0  Op: !> of type bool [line: 31]
> .   .   .   Child: 0  Op: * of type int [line: 10]
> .   .   .   .   Child: 0  Op: * of type int [line: 12]
> .   .   .   Child: 0  Op: + of type int [line: 12]
> .   .   .   .   Child: 0  Op: + of type int [line: 13]
> .   .   .   Child: 0  Op: * of type int [line: 13]
> .   .   .   .   Child: 0  Op: + of type int [line: 15]
> .   .   .   .   .   Child: 0  Op: + of type int [line: 16]
> .   .   .   .   .   .   Child: 0  Op: + of type int [line: 18]
> .   .   .   Child: 0  Op: * of type int [line: 18]
> .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 19]
> .   .   .   .   Child: 0  Op: * of type int [line: 19]
> .   .   .   Child: 0  Op: / of type int [line: 19]
> .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 20]
> .   .   .   .   .   Child: 0  Op: * of type int [line: 20]
> .   .   .   .   Child: 0  Op: / of type int [line: 20]
> .   .   .   Child: 0  Op: % of type int [line: 20]
> .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 22]
> .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 22]
> .   .   .   .   .   .   Child: 0  Op: / of type int [line: 22]
> .   .   .   .   .   Child: 0  Op: % of type int [line: 22]
> .   .   .   .   Child: 0  Op: + of type int [line: 22]
> .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 23]
> .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 23]
> .   .   .   .   .   .   Child: 0  Op: / of type int [line: 23]
> .   .   .   .   .   Child: 0  Op: % of type int [line: 23]
> .   .   .   .   Child: 0  Op: + of type int [line: 23]
> .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 25]
> .   .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 25]
> .   .   .   .   .   .   .   Child: 0  Op: / of type int [line: 25]
> .   .   .   .   .   .   Child: 0  Op: % of type int [line: 25]
> .   .   .   .   .   Child: 0  Op: + of type int [line: 25]
> .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 26]
> .   .   .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 26]
> .   .   .   .   .   .   .   .   Child: 0  Op: / of type int [line: 26]
> .   .   .   .   .   .   .   Child: 0  Op: % of type int [line: 26]
> .   .   .   .   .   .   Child: 0  Op: + of type int [line: 26]
> .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 28]
> .   .   .   .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 28]
> .   .   .   .   .   .   .   .   .   Child: 0  Op: / of type int [line: 28]
> .   .   .   .   .   .   .   .   Child: 0  Op: % of type int [line: 28]
> .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 28]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   Child: 0  Op: / of type int [line: 29]
> .   .   .   .   .   .   .   .   .   Child: 0  Op: % of type int [line: 29]
> .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 31]
> .   .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: * of type int [line: 31]
> .   .   .   .   .   .   .   .   .   .   .   Child: 0  Op: / of type int [line: 31]
> .   .   .   .   .   .   .   .   .   .   Child: 0  Op: % of type int [line: 31]
> .   .   .   .   .   .   .   .   .   Child: 0  Op: + of type int [line: 31]
> .   .   .   Child: 0  Op: * of type int [line: 9]
> .   .   .   Child: 0  Op: or of type bool [line: 29]
> .   Child: 0  Parm: x of type int [line: 2]
> .   .   Child: 0  Var: x of type bool [line: 6]
> .   .   .   .   Child: 1  Call: ident [line: 10]
> .   .   Child: 1  Call: output [line: 8]
> .   Child: 1  Compound [line: 2]
> .   Child: 1  Compound [line: 5]
> .   .   .   .   .   Child: 1  Const 1000 of type int [line: 29]
> .   .   .   .   .   .   Child: 1  Const 1000 of type int [line: 31]
> .   .   .   .   .   Child: 1  Const 222 of type int [line: 12]
> .   .   .   .   .   Child: 1  Const 222 of type int [line: 13]
> .   .   .   .   .   Child: 1  Const 222 of type int [line: 15]
> .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 16]
> .   .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 18]
> .   .   .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 19]
> .   .   .   .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 20]
> .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 22]
> .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 23]
> .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 25]
> .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 26]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 28]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 222 of type int [line: 31]
> .   .   .   .   Child: 1  Const 222 of type int [line: 9]
> .   .   .   .   Child: 1  Const 333 of type int [line: 12]
> .   .   .   .   Child: 1  Const 333 of type int [line: 13]
> .   .   .   .   Child: 1  Const 333 of type int [line: 18]
> .   .   .   .   .   Child: 1  Const 333 of type int [line: 19]
> .   .   .   .   .   .   Child: 1  Const 333 of type int [line: 20]
> .   .   .   .   .   .   .   .   Child: 1  Const 333 of type int [line: 22]
> .   .   .   .   .   .   .   .   Child: 1  Const 333 of type int [line: 23]
> .   .   .   .   .   .   .   .   .   Child: 1  Const 333 of type int [line: 25]
> .   .   .   .   .   .   .   .   .   .   Child: 1  Const 333 of type int [line: 26]
> .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 333 of type int [line: 28]
> .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 333 of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 333 of type int [line: 31]
> .   .   .   .   Child: 1  Const 42 of type int [line: 20]
> .   .   .   .   .   .   Child: 1  Const 42 of type int [line: 22]
> .   .   .   .   .   .   Child: 1  Const 42 of type int [line: 23]
> .   .   .   .   .   .   .   Child: 1  Const 42 of type int [line: 25]
> .   .   .   .   .   .   .   .   Child: 1  Const 42 of type int [line: 26]
> .   .   .   .   .   .   .   .   .   Child: 1  Const 42 of type int [line: 28]
> .   .   .   .   .   .   .   .   .   .   Child: 1  Const 42 of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 42 of type int [line: 31]
> .   .   .   .   Child: 1  Const 444 of type int [line: 19]
> .   .   .   .   .   Child: 1  Const 444 of type int [line: 20]
> .   .   .   .   .   .   .   Child: 1  Const 444 of type int [line: 22]
> .   .   .   .   .   .   .   Child: 1  Const 444 of type int [line: 23]
> .   .   .   .   .   .   .   .   Child: 1  Const 444 of type int [line: 25]
> .   .   .   .   .   .   .   .   .   Child: 1  Const 444 of type int [line: 26]
> .   .   .   .   .   .   .   .   .   .   Child: 1  Const 444 of type int [line: 28]
> .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 444 of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   .   .   Child: 1  Const 444 of type int [line: 31]
> .   .   .   .   .   Child: 1  Const 555 of type int [line: 22]
> .   .   .   .   .   Child: 1  Const 555 of type int [line: 23]
> .   .   .   .   .   .   Child: 1  Const 555 of type int [line: 25]
> .   .   .   .   .   .   .   Child: 1  Const 555 of type int [line: 26]
> .   .   .   .   .   .   .   .   Child: 1  Const 555 of type int [line: 28]
> .   .   .   .   .   .   .   .   .   Child: 1  Const 555 of type int [line: 29]
> .   .   .   .   .   .   .   .   .   .   Child: 1  Const 555 of type int [line: 31]
> .   .   .   .   Child: 1  Const 666 of type int [line: 22]
> .   .   .   .   Child: 1  Const 666 of type int [line: 23]
> .   .   .   .   .   Child: 1  Const 666 of type int [line: 25]
> .   .   .   .   .   .   Child: 1  Const 666 of type int [line: 26]
> .   .   .   .   .   .   .   Child: 1  Const 666 of type int [line: 28]
> .   .   .   .   .   .   .   .   Child: 1  Const 666 of type int [line: 29]
> .   .   .   .   .   .   .   .   .   Child: 1  Const 666 of type int [line: 31]
> .   .   .   .   .   Child: 1  Const 888 of type int [line: 28]
> .   .   .   .   .   .   Child: 1  Const 888 of type int [line: 29]
> .   .   .   .   .   .   .   Child: 1  Const 888 of type int [line: 31]
> .   .   .   .   Child: 1  Op: < of type bool [line: 28]
> .   .   .   .   .   Child: 1  Op: < of type bool [line: 29]
> .   .   .   .   Child: 1  Op: != of type bool [line: 29]
> .   .   .   .   .   .   Child: 1  Op: < of type bool [line: 31]
> .   .   .   .   .   Child: 1  Op: != of type bool [line: 31]
> .   .   .   .   Child: 1  Op: or of type bool [line: 31]
> .   .   Child: 1  Return [line: 2]
> Func: ident returns type int [line: 2]
> Number of errors: 0
> Number of warnings: 1
> .   .   Sibling: 10  Call: output [line: 18]
> .   .   Sibling: 11  Call: output [line: 19]
> .   .   Sibling: 12  Call: output [line: 20]
> .   .   Sibling: 13  Call: outnl [line: 21]
> .   .   Sibling: 14  Call: outputb [line: 22]
> .   .   Sibling: 15  Call: outputb [line: 23]
> .   .   Sibling: 16  Call: outnl [line: 24]
> .   .   Sibling: 17  Call: outputb [line: 25]
> .   .   Sibling: 18  Call: outputb [line: 26]
> .   .   Sibling: 19  Call: outnl [line: 27]
> .   .   Sibling: 1  Call: output [line: 9]
> Sibling: 1  Func: main returns type void [line: 4]
> .   .   Sibling: 20  Call: outputb [line: 28]
> .   .   Sibling: 21  Call: outputb [line: 29]
> .   .   Sibling: 22  Call: outnl [line: 30]
> .   .   Sibling: 23  Call: outputb [line: 31]
> .   .   Sibling: 24  Call: outnl [line: 32]
> .   .   Sibling: 2  Call: output [line: 10]
> .   .   Sibling: 3  Call: outnl [line: 11]
> .   .   Sibling: 4  Call: output [line: 12]
> .   .   Sibling: 5  Call: output [line: 13]
> .   .   Sibling: 6  Call: outnl [line: 14]
> .   .   Sibling: 7  Call: output [line: 15]
> .   .   Sibling: 8  Call: output [line: 16]
> .   .   Sibling: 9  Call: outnl [line: 17]
> WARNING(6): The variable 'x' seems not to be used.
