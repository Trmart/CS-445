.   .   .   Child:   Const 666 [line: 45]
.   .   .   Child:   Const 777 [line: 46]
.   .   .   .   Child:   Id: a [line: 13]
.   .   .   Child:   Id: a [line: 4]
.   .   .   .   Child:   Id: a [line: 42]
.   .   .   Child:   Id: a [line: 47]
.   .   .   Child:   Id: a [line: 48]
.   .   .   .   Child:   Id: b [line: 14]
.   .   .   .   Child:   Id: b [line: 25]
.   .   .   .   Child:   Id: b [line: 43]
.   .   .   Child:   Id: b [line: 5]
.   .   .   .   Child:   Id: c [line: 15]
.   .   .   .   Child:   Id: c [line: 26]
.   .   .   .   Child:   Id: c [line: 44]
.   .   .   Child:   Id: c [line: 6]
.   .   .   .   Child:   Id: ga [line: 50]
.   .   .   Child:   Id: ga [line: 53]
.   .   .   Child:   Id: ga [line: 54]
.   .   .   .   .   Child:   Id: ga [line: 60]
.   .   .   .   Child:   Id: ga [line: 64]
.   .   .   .   Child:   Id: ga [line: 65]
.   .   .   .   Child:   Id: gb [line: 51]
.   .   .   .   .   Child:   Id: gb [line: 61]
.   .   .   .   Child:   Id: gc [line: 52]
.   .   .   .   .   Child:   Id: gc [line: 62]
.   .   .   Child:   Id: z [line: 27]
.   .   .   Child:   Op: [ [line: 13]
.   .   .   Child:   Op: [ [line: 14]
.   .   .   Child:   Op: [ [line: 15]
.   .   .   Child:   Op: [ [line: 25]
.   .   .   Child:   Op: [ [line: 26]
.   .   .   Child:   Op: [ [line: 42]
.   .   .   Child:   Op: [ [line: 43]
.   .   .   Child:   Op: [ [line: 44]
.   .   .   Child:   Op: [ [line: 50]
.   .   .   Child:   Op: [ [line: 51]
.   .   .   Child:   Op: [ [line: 52]
.   .   .   .   Child:   Op: [ [line: 60]
.   .   .   .   Child:   Op: [ [line: 61]
.   .   .   .   Child:   Op: [ [line: 62]
.   Child:   Parm: a of array of type int [line: 11]
.   Child:   Parm: a of type int [line: 2]
.   Child:   Parm: z of array of type int [line: 20]
.   .   Child:   Var: a of array of type int [line: 38]
.   .   Child:   Var: b of array of type bool [line: 22]
.   .   .   Child:   Var: ga of static array of type int [line: 57]
ERROR(11): Symbol '(' is already declared at line 2.
ERROR(13): Symbol 'output' is not declared.
ERROR(14): Symbol 'outputb' is not declared.
ERROR(15): Symbol 'outputc' is not declared.
ERROR(16): Symbol 'outnl' is not declared.
ERROR(20): Symbol '(' is already declared at line 2.
ERROR(27): Symbol 'sioux' is not declared.
ERROR(36): Symbol '(' is already declared at line 2.
ERROR(45): Symbol 'cheyenne' is not declared.
ERROR(46): Symbol 'cheyenne' is not declared.
ERROR(47): Symbol 'sioux' is not declared.
ERROR(48): Symbol 'comanche' is not declared.
ERROR(4): Symbol 'output' is not declared.
ERROR(53): Symbol 'sioux' is not declared.
ERROR(54): Symbol 'comanche' is not declared.
ERROR(5): Symbol 'outputb' is not declared.
ERROR(64): Symbol 'sioux' is not declared.
ERROR(65): Symbol 'comanche' is not declared.
ERROR(6): Symbol 'outputc' is not declared.
ERROR(7): Symbol 'outnl' is not declared.
ERROR(LINKER): A function named 'main()' must be defined.
Func: ( returns type void [line: 2]
.   .   hild:   Assign: <= [line: 25]
.   .   hild:   Assign: <= [line: 42]
.   .   .   hild:   Assign: <= [line: 60]
.   .   hild:   Call: output [line: 13]
.   .   hild:   Call: output [line: 4]
.   hild:   Compound [line: 12]
.   hild:   Compound [line: 21]
.   hild:   Compound [line: 3]
.   hild:   Compound [line: 37]
.   .   .   .   hild:   Const 1 [line: 13]
.   .   .   .   hild:   Const 1 [line: 42]
.   .   .   .   hild:   Const 1 [line: 50]
.   .   .   .   .   hild:   Const 1 [line: 60]
.   .   .   .   hild:   Const 2 [line: 14]
.   .   .   .   hild:   Const 2 [line: 25]
.   .   .   .   hild:   Const 2 [line: 43]
.   .   .   .   hild:   Const 2 [line: 51]
.   .   .   .   .   hild:   Const 2 [line: 61]
.   .   .   .   hild:   Const 3 [line: 15]
.   .   .   .   hild:   Const 3 [line: 26]
.   .   .   .   hild:   Const 3 [line: 44]
.   .   .   .   hild:   Const 3 [line: 52]
.   .   .   .   .   hild:   Const 3 [line: 62]
.   .   .   hild:   Const 555 [line: 42]
.   .   .   hild:   Const 888 [line: 50]
.   .   .   .   hild:   Const 999 [line: 60]
.   .   .   hild:   Const false [line: 51]
.   .   .   hild:   Const 'g' [line: 52]
.   .   .   .   hild:   Const 's' [line: 62]
.   .   .   hild:   Const true [line: 25]
.   .   .   hild:   Const true [line: 43]
.   .   .   .   hild:   Const true [line: 61]
.   .   .   hild:   Const 'z' [line: 26]
.   .   .   hild:   Const 'z' [line: 44]
Number of errors: 21
Number of warnings: 0
.   .   Sibling: 10  Call: sioux [line: 53]
.   .   Sibling: 11  Call: comanche [line: 54]
.   .   Sibling: 12  Compound [line: 56]
.   .   Sibling: 1  Assign: <= [line: 26]
.   .   Sibling: 1  Assign: <= [line: 43]
.   .   .   Sibling: 1  Assign: <= [line: 61]
.   .   Sibling: 1  Call: outputb [line: 14]
.   .   Sibling: 1  Call: outputb [line: 5]
.   .   .   Sibling: 1  Const false [line: 46]
.   .   .   Sibling: 1  Const true [line: 45]
Sibling: 1  Func: ( returns type void [line: 11]
.   .   .   Sibling: 1  Id: b [line: 27]
.   .   .   Sibling: 1  Id: b [line: 47]
.   .   .   Sibling: 1  Id: gb [line: 53]
.   .   .   .   Sibling: 1  Id: gb [line: 64]
.   Sibling: 1  Parm: b of array of type bool [line: 11]
.   Sibling: 1  Parm: b of type bool [line: 2]
.   .   Sibling: 1  Var: b of array of type bool [line: 39]
.   .   Sibling: 1  Var: c of array of type char [line: 23]
.   .   .   Sibling: 1  Var: gb of static array of type bool [line: 58]
.   .   Sibling: 2  Assign: <= [line: 44]
.   .   .   Sibling: 2  Assign: <= [line: 62]
.   .   Sibling: 2  Call: outputc [line: 15]
.   .   Sibling: 2  Call: outputc [line: 6]
.   .   Sibling: 2  Call: sioux [line: 27]
.   .   .   Sibling: 2  Const 'c' [line: 45]
.   .   .   Sibling: 2  Const 'd' [line: 46]
Sibling: 2  Func: ( returns type void [line: 20]
.   .   .   Sibling: 2  Id: c [line: 27]
.   .   .   Sibling: 2  Id: c [line: 47]
.   .   .   Sibling: 2  Id: gc [line: 53]
.   .   .   .   Sibling: 2  Id: gc [line: 64]
.   Sibling: 2  Parm: c of array of type char [line: 11]
.   Sibling: 2  Parm: c of type char [line: 2]
.   .   Sibling: 2  Var: c of array of type char [line: 40]
.   .   .   Sibling: 2  Var: gc of static array of type char [line: 59]
.   .   Sibling: 3  Call: cheyenne [line: 45]
.   .   Sibling: 3  Call: outnl [line: 16]
.   .   Sibling: 3  Call: outnl [line: 7]
.   .   .   Sibling: 3  Call: sioux [line: 64]
Sibling: 3  Var: ga of array of type int [line: 32]
.   .   Sibling: 4  Call: cheyenne [line: 46]
.   .   .   Sibling: 4  Call: comanche [line: 65]
Sibling: 4  Var: gb of array of type bool [line: 33]
.   .   Sibling: 5  Call: sioux [line: 47]
Sibling: 5  Var: gc of array of type char [line: 34]
.   .   Sibling: 6  Call: comanche [line: 48]
Sibling: 6  Func: ( returns type void [line: 36]
.   .   Sibling: 7  Assign: <= [line: 50]
.   .   Sibling: 8  Assign: <= [line: 51]
.   .   Sibling: 9  Assign: <= [line: 52]
