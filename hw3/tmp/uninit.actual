.   .   .   .   Child: 0  Const 4 [line: 8]
.   .   .   .   Child: 0  Id: g [line: 7]
.   .   .   Child: 0  Id: i [line: 7]
.   .   .   Child: 0  Id: i [line: 8]
.   .   .   Child: 0  Id: z [line: 5]
.   .   .   Child: 0  Id: z [line: 6]
.   Child: 0  Parm: x of type int [line: 1]
.   .   Child: 0  Var: z of type int [line: 3]
.   .   Child: 1  Assign: <= [line: 5]
.   Child: 1  Compound [line: 2]
.   .   .   .   Child: 1  Const 3 [line: 7]
.   .   .   .   Child: 1  Id: h [line: 8]
.   .   .   Child: 1  Id: i [line: 5]
.   .   .   Child: 1  Id: i [line: 6]
.   .   .   Child: 1  Op: + [line: 7]
.   .   .   Child: 1  Op: + [line: 8]
Func: ( returns type void [line: 1]
.   .   Sibling: 1  Assign: <= [line: 6]
.   .   Sibling: 1  Var: g of type int [line: 3]
.   .   Sibling: 2  Assign: <= [line: 7]
.   .   Sibling: 2  Var: h of type int [line: 3]
.   .   Sibling: 3  Assign: <= [line: 8]
.   .   Sibling: 3  Var: i of type int [line: 3]
.   .   Sibling: 4  Var: j of type int [line: 3]
.   .   Sibling: 5  Var: k of type int [line: 3]
.   .   Sibling: 6  Var: l of type int [line: 3]
.   .   Sibling: 7  Var: m of type int [line: 3]
.   .   Sibling: 8  Var: z of type int [line: 3]
.   .   Sibling: 9  Var: z of type int [line: 3]
