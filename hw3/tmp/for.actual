.   .   .   .   Child: 0  Const 0 of type int [line: 20]
.   .   .   .   Child: 0  Const 0 of type int [line: 23]
.   .   .   .   Child: 0  Const 0 of type int [line: 26]
.   .   .   .   .   Child: 0  Const 1 of type int [line: 29]
.   .   .   .   Child: 0  Const 1 of type int [line: 29]
.   .   .   .   Child: 0  Id: aa of type undefined [line: 10]
.   .   .   .   Child: 0  Id: aa of type undefined [line: 8]
.   .   .   .   Child: 0  Id: aa of type undefined [line: 9]
.   .   .   .   .   Child: 0  Id: a of type undefined [line: 20]
.   .   .   .   Child: 0  Id: bb of type undefined [line: 12]
.   .   .   .   Child: 0  Id: bb of type undefined [line: 13]
.   .   .   .   Child: 0  Id: bb of type undefined [line: 14]
.   .   .   .   .   Child: 0  Id: b of type undefined [line: 23]
.   .   .   .   Child: 0  Id: ca of type undefined [line: 18]
.   .   .   .   Child: 0  Id: cc of type undefined [line: 16]
.   .   .   .   Child: 0  Id: cc of type undefined [line: 17]
.   .   .   .   .   Child: 0  Id: c of type undefined [line: 26]
.   .   .   .   .   .   Child: 0  Id: i of type undefined [line: 29]
.   .   .   .   .   Child: 0  Op: * of type int [line: 29]
.   .   .   Child: 0  Op: [ of type undefined [line: 10]
.   .   .   Child: 0  Op: [ of type undefined [line: 12]
.   .   .   Child: 0  Op: [ of type undefined [line: 13]
.   .   .   Child: 0  Op: [ of type undefined [line: 14]
.   .   .   Child: 0  Op: [ of type undefined [line: 16]
.   .   .   Child: 0  Op: [ of type undefined [line: 17]
.   .   .   Child: 0  Op: [ of type undefined [line: 18]
.   .   .   .   Child: 0  Op: [ of type undefined [line: 20]
.   .   .   .   Child: 0  Op: [ of type undefined [line: 23]
.   .   .   .   Child: 0  Op: [ of type undefined [line: 26]
.   .   .   Child: 0  Op: [ of type undefined [line: 8]
.   .   .   Child: 0  Op: [ of type undefined [line: 9]
.   .   Child: 0  Var: aa of array of type int [line: 4]
.   .   .   Child: 0  Var: i of type int [line: 20]
.   .   .   Child: 0  Var: i of type int [line: 23]
.   .   .   Child: 0  Var: i of type int [line: 26]
.   .   .   Child: 0  Var: i of type int [line: 29]
.   .   .   .   Child: 0  Var: j of type int [line: 29]
.   .   Child: 1  Assign: <= [line: 8]
.   Child: 1  Compound [line: 3]
.   .   .   .   Child: 1  Const 0 of type int [line: 12]
.   .   .   .   Child: 1  Const 0 of type int [line: 16]
.   .   .   .   Child: 1  Const 0 of type int [line: 8]
.   .   .   Child: 1  Const 100 of type int [line: 8]
.   .   .   Child: 1  Const 101 of type int [line: 9]
.   .   .   Child: 1  Const 102 of type int [line: 10]
.   .   .   .   Child: 1  Const 1 of type int [line: 13]
.   .   .   .   Child: 1  Const 1 of type int [line: 17]
.   .   .   .   Child: 1  Const 1 of type int [line: 9]
.   .   .   .   Child: 1  Const 2 of type int [line: 10]
.   .   .   .   Child: 1  Const 2 of type int [line: 14]
.   .   .   .   Child: 1  Const 2 of type int [line: 18]
.   .   .   .   Child: 1  Const 2 of type int [line: 20]
.   .   .   .   Child: 1  Const 2 of type int [line: 23]
.   .   .   .   Child: 1  Const 2 of type int [line: 26]
.   .   .   .   Child: 1  Const 3 of type int [line: 29]
.   .   .   .   .   Child: 1  Const 6 of type int [line: 29]
.   .   .   Child: 1  Const 'a' of type char [line: 16]
.   .   .   Child: 1  Const 'b' of type char [line: 17]
.   .   .   Child: 1  Const 'c' of type char [line: 18]
.   .   .   Child: 1  Const false of type bool [line: 13]
.   .   .   Child: 1  Const true of type bool [line: 12]
.   .   .   Child: 1  Const true of type bool [line: 14]
.   .   .   .   .   Child: 1  Id: i of type undefined [line: 20]
.   .   .   .   .   Child: 1  Id: i of type undefined [line: 23]
.   .   .   .   .   Child: 1  Id: i of type undefined [line: 26]
.   .   .   .   .   .   Child: 1  Id: j of type undefined [line: 29]
.   .   .   Child: 1  Range [line: 20]
.   .   .   Child: 1  Range [line: 23]
.   .   .   Child: 1  Range [line: 26]
.   .   .   .   Child: 1  Range [line: 29]
.   .   .   Child: 1  Range [line: 29]
.   .   .   Child: 2  Call: outputb [line: 23]
.   .   .   Child: 2  Call: outputc [line: 26]
.   .   .   Child: 2  Call: output [line: 20]
.   .   .   .   Child: 2  Call: output [line: 29]
.   .   .   .   .   Child: 2  Const 2 of type int [line: 29]
.   .   .   Child: 2  For [line: 29]
ERROR(12): Symbol 'bb' is not declared.
ERROR(13): Symbol 'bb' is not declared.
ERROR(14): Symbol 'bb' is not declared.
ERROR(16): Symbol 'cc' is not declared.
ERROR(17): Symbol 'cc' is not declared.
ERROR(20): Symbol 'a' is not declared.
ERROR(20): Symbol 'output' is not declared.
ERROR(21): Symbol 'outnl' is not declared.
ERROR(23): Symbol 'b' is not declared.
ERROR(23): Symbol 'outputb' is not declared.
ERROR(24): Symbol 'outnl' is not declared.
ERROR(26): Symbol 'c' is not declared.
ERROR(26): Symbol 'outputc' is not declared.
ERROR(27): Symbol 'outnl' is not declared.
ERROR(29): Symbol 'output' is not declared.
Func: main returns type void [line: 2]
Number of errors: 15
Number of warnings: 8
.   .   Sibling: 10  Call: outnl [line: 21]
.   .   Sibling: 11  For [line: 23]
.   .   Sibling: 12  Call: outnl [line: 24]
.   .   Sibling: 13  For [line: 26]
.   .   Sibling: 14  Call: outnl [line: 27]
.   .   Sibling: 15  For [line: 29]
.   .   Sibling: 1  Assign: <= [line: 9]
.   .   Sibling: 1  Var: ba of array of type bool [line: 5]
.   .   Sibling: 2  Assign: <= [line: 10]
.   .   Sibling: 2  Var: ca of array of type char [line: 6]
.   .   Sibling: 3  Assign: <= [line: 12]
.   .   Sibling: 4  Assign: <= [line: 13]
.   .   Sibling: 5  Assign: <= [line: 14]
.   .   Sibling: 6  Assign: <= [line: 16]
.   .   Sibling: 7  Assign: <= [line: 17]
.   .   Sibling: 8  Assign: <= [line: 18]
.   .   Sibling: 9  For [line: 20]
WARNING(20): The variable 'i' seems not to be used.
WARNING(23): The variable 'i' seems not to be used.
WARNING(26): The variable 'i' seems not to be used.
WARNING(29): The variable 'i' seems not to be used.
WARNING(29): The variable 'j' seems not to be used.
WARNING(4): The variable 'aa' seems not to be used.
WARNING(5): The variable 'ba' seems not to be used.
WARNING(6): The variable 'ca' seems not to be used.
