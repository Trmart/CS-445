.   .   .   Child:   Assign: <= [line: 15]
.   .   .   Child:   Call: ant [line: 82]
.   .   .   .   Child:   Call: ant [line: 85]
.   .   .   Child:   Const 111 [line: 1]
.   .   .   Child:   Const 11 [line: 45]
.   .   .   .   .   Child:   Const 15 [line: 49]
.   .   .   Child:   Const 1818 [line: 20]
.   .   .   Child:   Const 2020 [line: 22]
.   .   .   .   .   Child:   Const 3 [line: 49]
.   .   .   Child:   Const 676 [line: 80]
.   .   .   .   .   Child:   Const 7 [line: 49]
.   .   .   .   Child:   Const 999 [line: 12]
.   .   .   Child:   Const false [line: 17]
.   .   .   Child:   Const false [line: 3]
.   .   .   Child:   Const is array "cows" [line: 77]
.   .   .   Child:   Const 'm' [line: 64]
.   .   .   Child:   Id: aa [line: 40]
.   .   .   .   .   Child:   Id: aa [line: 42]
.   .   .   .   Child:   Id: aa [line: 47]
.   .   .   Child:   Id: aa [line: 54]
.   .   .   Child:   Id: aa [line: 57]
.   .   .   Child:   Id: aa [line: 60]
.   .   .   .   Child:   Id: a [line: 10]
.   .   .   .   .   Child:   Id: a [line: 11]
.   .   .   .   Child:   Id: a [line: 11]
.   .   .   Child:   Id: a [line: 19]
.   .   .   Child:   Id: a [line: 21]
.   .   .   Child:   Id: a [line: 23]
.   .   .   Child:   Id: a [line: 25]
.   .   .   Child:   Id: a [line: 26]
.   .   .   Child:   Id: a [line: 27]
.   .   .   Child:   Id: a [line: 28]
.   .   .   Child:   Id: a [line: 30]
.   .   .   Child:   Id: a [line: 32]
.   .   .   Child:   Id: a [line: 5]
.   .   .   .   .   Child:   Id: a [line: 50]
.   .   .   .   Child:   Id: a [line: 9]
.   .   .   .   Child:   Id: ba [line: 41]
.   .   .   Child:   Id: ba [line: 44]
.   .   .   .   Child:   Id: ba [line: 48]
.   .   .   Child:   Id: ba [line: 55]
.   .   .   Child:   Id: ba [line: 58]
.   .   .   Child:   Id: bbb [line: 83]
.   .   .   .   .   .   Child:   Id: b [line: 13]
.   .   .   .   .   Child:   Id: b [line: 13]
.   .   .   Child:   Id: b [line: 13]
.   .   .   .   .   .   Child:   Id: b [line: 14]
.   .   .   .   .   Child:   Id: b [line: 14]
.   .   .   Child:   Id: b [line: 14]
.   .   .   .   Child:   Id: b [line: 15]
.   .   .   Child:   Id: b [line: 31]
.   .   .   .   Child:   Id: b [line: 48]
.   .   .   Child:   Id: b [line: 6]
.   .   .   .   Child:   Id: ca [line: 42]
.   .   .   Child:   Id: ca [line: 56]
.   .   .   Child:   Id: ca [line: 59]
.   .   .   Child:   Id: ca [line: 62]
.   .   .   .   .   Child:   Id: ccc [line: 83]
.   .   .   Child:   Id: c [line: 7]
.   .   .   .   Child:   Id: i [line: 68]
.   .   .   .   .   Child:   Id: i [line: 70]
.   .   .   .   Child:   Id: z [line: 47]
.   .   .   .   .   Child:   Id: z [line: 51]
.   .   .   .   .   Child:   Op: and [line: 13]
.   .   .   Child:   Op: < [line: 10]
.   .   .   .   Child:   Op: !< [line: 11]
.   .   .   Child:   Op: !> [line: 11]
.   .   .   Child:   Op: = [line: 12]
.   .   .   Child:   Op: [ [line: 41]
.   .   .   Child:   Op: [ [line: 42]
.   .   .   .   Child:   Op: + [line: 49]
.   .   .   Child:   Op: = [line: 68]
.   .   .   .   Child:   Op: [ [line: 83]
.   .   .   Child:   Op: + [line: 85]
.   .   .   Child:   Op: > [line: 9]
.   .   .   .   Child:   Op: not [line: 13]
.   .   .   .   Child:   Op: not [line: 14]
.   .   .   .   .   Child:   Op: or [line: 14]
.   Child:   Parm: a of type int [line: 2]
.   Child:   Parm: i of type int [line: 67]
.   .   Child:   Var: a of type int [line: 37]
.   .   Child:   Var: bbb of static type bool [line: 76]
.   .   Child:   Var: b of type bool [line: 3]
.   .   .   .   Child:   Var: i of type int [line: 69]
.   .   .   Child:   Var: z of type int [line: 47]
.   .   .   Child:   Var: z of type int [line: 48]
.   .   .   Child:   Var: z of type int [line: 49]
ERROR(41): Array index is the unindexed array 'ba'.
ERROR(67): Symbol '(' is already declared at line 2.
ERROR(80): Symbol 'bat' is not declared.
ERROR(82): Symbol 'bat' is not declared.
Func: ant returns type int [line: 1]
.   .   hild:   Assign: <= [line: 5]
.   .   .   .   hild:   Assign: <= [line: 50]
.   .   .   .   hild:   Assign: <= [line: 70]
.   .   .   hild:   Break [line: 17]
.   .   hild:   Call: ant [line: 79]
.   hild:   Compound [line: 1]
.   hild:   Compound [line: 2]
.   hild:   Compound [line: 36]
.   hild:   Compound [line: 67]
.   .   .   hild:   Compound [line: 68]
.   hild:   Compound [line: 75]
.   .   .   hild:   Const 1010 [line: 12]
.   .   .   .   .   hild:   Const 1111 [line: 13]
.   .   .   .   .   hild:   Const 1313 [line: 14]
.   .   .   hild:   Const 1616 [line: 15]
.   .   .   hild:   Const 1717 [line: 19]
.   .   .   hild:   Const 1919 [line: 21]
.   .   .   hild:   Const 1 [line: 25]
.   .   .   .   .   hild:   Const 1 [line: 42]
.   .   .   hild:   Const 2121 [line: 23]
.   .   .   hild:   Const 222 [line: 5]
.   .   .   .   hild:   Const 222 [line: 9]
.   .   .   hild:   Const 2 [line: 26]
.   .   .   hild:   Const 2 [line: 40]
.   .   .   .   .   hild:   Const 2 [line: 83]
.   .   .   .   hild:   Const 333 [line: 10]
.   .   .   hild:   Const 333 [line: 9]
.   .   .   hild:   Const 3 [line: 27]
.   .   .   .   .   hild:   Const 3 [line: 49]
.   .   .   .   hild:   Const 3 [line: 68]
.   .   .   hild:   Const 444 [line: 10]
.   .   .   hild:   Const 4 [line: 28]
.   .   .   .   .   hild:   Const 4 [line: 49]
.   .   .   .   hild:   Const 666 [line: 11]
.   .   .   .   .   hild:   Const 777 [line: 11]
.   .   .   .   hild:   Const 807 [line: 85]
.   .   .   .   hild:   Const 888 [line: 11]
.   .   .   .   .   hild:   Const 8 [line: 49]
.   .   .   hild:   Const is array "dogs are great" [line: 62]
.   .   .   .   hild:   Const 'r' [line: 83]
.   .   .   .   .   .   hild:   Const true [line: 13]
.   .   .   .   .   .   hild:   Const true [line: 14]
.   .   .   .   hild:   Const true [line: 15]
.   .   .   hild:   Const true [line: 6]
.   .   .   hild:   Const 'z' [line: 7]
.   .   .   .   hild:   Id: aa [line: 47]
.   .   .   .   hild:   Id: aa [line: 48]
.   .   .   hild:   Id: aa [line: 54]
.   .   .   hild:   Id: aa [line: 57]
.   .   .   hild:   Id: aa [line: 60]
.   .   .   .   hild:   Id: a [line: 12]
.   .   .   hild:   Id: a [line: 20]
.   .   .   hild:   Id: a [line: 22]
.   .   .   .   hild:   Id: a [line: 41]
.   .   .   .   .   hild:   Id: a [line: 51]
.   .   .   hild:   Id: ba [line: 55]
.   .   .   hild:   Id: ba [line: 58]
.   .   .   hild:   Id: b [line: 41]
.   .   .   .   hild:   Id: b [line: 48]
.   .   .   hild:   Id: ca [line: 56]
.   .   .   hild:   Id: ca [line: 59]
.   .   .   hild:   Id: c [line: 42]
.   .   .   .   .   hild:   Id: i [line: 70]
.   .   .   .   hild:   Id: z [line: 47]
.   .   .   .   .   hild:   Id: z [line: 50]
.   .   .   hild:   If [line: 11]
.   .   .   hild:   If [line: 13]
.   .   .   hild:   If [line: 14]
.   .   hild:   If [line: 68]
.   .   hild:   Op: [ [line: 40]
.   .   .   .   hild:   Op: [ [line: 42]
.   .   .   .   hild:   Op: * [line: 49]
.   .   .   hild:   Op: != [line: 83]
.   .   .   hild:   Range [line: 47]
.   .   .   hild:   Range [line: 48]
.   .   .   hild:   Range [line: 49]
.   .   hild:   Return [line: 1]
.   .   .   .   hild:   While [line: 13]
.   .   .   .   hild:   While [line: 14]
.   .   .   ild:   Compound [line: 49]
.   .   .   .   ild:   Const 1212 [line: 13]
.   .   .   .   ild:   Const 1414 [line: 14]
.   .   .   ild:   Const 1515 [line: 14]
.   .   .   ild:   Const 555 [line: 10]
.   .   .   .   ild:   Const 555 [line: 11]
.   .   .   .   ild:   Id: aa [line: 48]
.   .   .   ild:   Op: and [line: 48]
.   .   .   ild:   Op: + [line: 47]
.   .   .   .   ild:   Op: % [line: 49]
Number of errors: 4
Number of warnings: 5
.   .   Sibling: 10  Op: != [line: 56]
.   .   Sibling: 10  While [line: 17]
.   .   Sibling: 11  Op: + [line: 19]
.   .   Sibling: 11  Op: > [line: 57]
.   .   Sibling: 12  Op: - [line: 20]
.   .   Sibling: 12  Op: !< [line: 58]
.   .   Sibling: 13  Op: * [line: 21]
.   .   Sibling: 13  Op: < [line: 59]
.   .   Sibling: 14  Op: / [line: 22]
.   .   Sibling: 14  Op: !> [line: 60]
.   .   Sibling: 15  Assign: <= [line: 62]
.   .   Sibling: 15  Op: % [line: 23]
.   .   Sibling: 16  Assign: += [line: 25]
.   .   Sibling: 16  Return [line: 64]
.   .   Sibling: 17  Assign: -= [line: 26]
.   .   Sibling: 18  Assign: *= [line: 27]
.   .   Sibling: 19  Assign: /= [line: 28]
.   .   Sibling: 1  Assign: <= [line: 41]
.   .   .   .   Sibling: 1  Assign: <= [line: 51]
.   .   Sibling: 1  Assign: <= [line: 6]
.   .   Sibling: 1  Call: bat [line: 80]
.   .   .   Sibling: 1  Call: cat [line: 82]
.   .   .   Sibling: 1  Const 'g' [line: 80]
Sibling: 1  Func: ( returns type void [line: 2]
.   Sibling: 1  Parm: c of type char [line: 2]
.   .   Sibling: 1  Var: b of type bool [line: 37]
.   .   Sibling: 1  Var: ccc of static array of type char [line: 77]
.   .   Sibling: 20  Op: chsign [line: 30]
.   .   Sibling: 21  Op: not [line: 31]
.   .   Sibling: 22  Op: ? [line: 32]
.   .   Sibling: 2  Assign: <= [line: 42]
.   .   Sibling: 2  Assign: <= [line: 7]
.   .   Sibling: 2  Call: cat [line: 81]
Sibling: 2  Func: cat returns type char [line: 35]
.   .   Sibling: 2  Var: c of type char [line: 37]
.   .   Sibling: 3  Call: bat [line: 82]
Sibling: 3  Func: ( returns type void [line: 67]
.   .   Sibling: 3  If [line: 9]
.   .   Sibling: 3  Op: sizeof [line: 44]
.   .   Sibling: 3  Var: aa of array of type int [line: 38]
.   .   Sibling: 4  Assign: <= [line: 83]
Sibling: 4  Func: main returns type int [line: 74]
.   .   Sibling: 4  If [line: 10]
.   .   Sibling: 4  Op: ? [line: 45]
.   .   Sibling: 4  Var: ba of array of type bool [line: 38]
.   .   Sibling: 5  For [line: 47]
.   .   Sibling: 5  If [line: 11]
.   .   Sibling: 5  Return [line: 85]
.   .   Sibling: 5  Var: ca of array of type char [line: 38]
.   .   Sibling: 6  For [line: 48]
.   .   Sibling: 6  While [line: 12]
.   .   Sibling: 7  For [line: 49]
.   .   Sibling: 7  If [line: 13]
.   .   Sibling: 8  Assign: <= [line: 54]
.   .   Sibling: 8  If [line: 14]
.   .   Sibling: 9  If [line: 15]
.   .   Sibling: 9  Op: = [line: 55]
WARNING(40): Variable 'aa' may be uninitialized when used here.
WARNING(41): Variable 'b' may be uninitialized when used here.
WARNING(42): Variable 'c' may be uninitialized when used here.
WARNING(48): The variable 'z' seems not to be used.
WARNING(70): Variable 'i' may be uninitialized when used here.
