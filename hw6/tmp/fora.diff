3,9c3,9
< .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 3]
< .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 7]
< .   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -2 size: 1] [line: 5]
< .   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 3]
< .   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 7]
< .   .   .   Child: 0  Var: j of type int [mem: Local loc: -2 size: 1] [line: 5]
< .   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 2]
---
> .   .   .   .   Child: 0  Id: i of type int[mem: Local loc: -2 size: 1] [line: 3]
> .   .   .   .   Child: 0  Id: i of type int[mem: Local loc: -4 size: 1] [line: 7]
> .   .   .   .   Child: 0  Id: j of type int[mem: Local loc: -3 size: 1] [line: 5]
> .   .   .   Child: 0  Var: i of type int[mem: Local loc: -2 size: 1] [line: 3]
> .   .   .   Child: 0  Var: i of type int[mem: Local loc: -4 size: 1] [line: 7]
> .   .   .   Child: 0  Var: j of type int[mem: Local loc: -3 size: 1] [line: 5]
> .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 2]
15c15
< .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 7]
---
> .   .   .   .   Child: 1  Id: i of type int[mem: Local loc: -4 size: 1] [line: 7]
23,24c23,24
< .   .   .   .   Child: 2  Id: i of type int [mem: Local loc: -2 size: 1] [line: 7]
< Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
---
> .   .   .   .   Child: 2  Id: i of type int[mem: Local loc: -4 size: 1] [line: 7]
> Func: main returns type void[mem: Global loc: 0 size: -2] [line: 1]
28,29c28,29
< .   .   Sibling: 1  For [mem: None loc: 0 size: -3] [line: 5]
< .   .   Sibling: 2  For [mem: None loc: 0 size: -3] [line: 7]
---
> .   .   Sibling: 1  For [mem: None loc: 0 size: -4] [line: 5]
> .   .   Sibling: 2  For [mem: None loc: 0 size: -5] [line: 7]
