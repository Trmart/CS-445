4,7c4,7
< .   .   .   Child: 0  Const "dog" of array of type char [mem: Global loc: -1 size: 4] [line: 8]
< .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
< .   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 7]
< .   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 6]
---
> .   .   .   Child: 0  Const is array "dog" of type char[mem: None loc: 0 size: 1] [line: 8]
> .   .   .   .   Child: 0  Id: x of type int[mem: None loc: 0 size: 1] [line: 7]
> .   .   .   Child: 0  Var: i of type int[mem: Local loc: 0 size: 1] [line: 7]
> .   .   Child: 0  Var: x of type int[mem: Local loc: 0 size: 1] [line: 6]
9,13c9,13
< .   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 2]
< .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 5]
< .   .   .   Child: 1  Const "cat" of array of type char [mem: Global loc: -5 size: 4] [line: 8]
< .   .   Child: 1  For [mem: None loc: 0 size: -4] [line: 7]
< .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
---
> .   Child: 1  Compound [mem: None loc: 0 size: 0] [line: 2]
> .   Child: 1  Compound [mem: None loc: 0 size: 0] [line: 5]
> .   .   .   Child: 1  Const is array "cat" of type char[mem: None loc: 0 size: 1] [line: 8]
> .   .   Child: 1  For [mem: None loc: 0 size: 0] [line: 7]
> .   .   .   .   Child: 1  Id: x of type int[mem: None loc: 0 size: 1] [line: 7]
16,17c16,17
< .   .   .   .   Child: 2  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
< Func: dog returns type int [mem: Global loc: 0 size: -2] [line: 2]
---
> .   .   .   .   Child: 2  Id: x of type int[mem: None loc: 0 size: 1] [line: 7]
> Func: dog returns type int[mem: Global loc: 0 size: 1] [line: 2]
20,21c20
< Offset for end of global space: -8
< Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
---
> Sibling: 1  Func: main returns type void[mem: Global loc: 0 size: 1] [line: 4]
